
swagger: '2.0'
info:
  version: '1.0'
  title: Natech.Mobile.WebApi
  contact: {}
host: www.example.com
basePath: /
securityDefinitions: {}
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /api/Accounts/GetAll:
    post:
      description: ''
      summary: Accounts_GetAll
      tags:
      - Accounts
      operationId: Accounts_GetAll
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/Request'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AccountsResponse'
          headers: {}
  /api/Accounts/GetAccountDetails:
    post:
      description: ''
      summary: Accounts_GetAccountDetails
      tags:
      - Accounts
      operationId: Accounts_GetAccountDetails
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/AccountDetailsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AccountsResponse'
          headers: {}
  /api/Accounts/GetLoanDetails:
    post:
      description: ''
      summary: Accounts_GetLoanDetails
      tags:
      - Accounts
      operationId: Accounts_GetLoanDetails
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/LoanRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LoanDetailsResponse'
          headers: {}
  /api/Accounts/GetLoanTransactions:
    post:
      description: ''
      summary: Accounts_GetLoanTransactions
      tags:
      - Accounts
      operationId: Accounts_GetLoanTransactions
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/LoanRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LoanTransactionsResponse'
          headers: {}
  /api/Cards/GetUserCardDetails:
    post:
      description: ''
      summary: Cards_GetUserCardDetails
      tags:
      - Cards
      operationId: Cards_GetUserCardDetails
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/CardDetailsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CardDetailsResponse'
          headers: {}
  /api/Cards/GetUserCards:
    post:
      description: ''
      summary: Cards_GetUserCards
      tags:
      - Cards
      operationId: Cards_GetUserCards
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/Request'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserCardsResponse'
          headers: {}
  /api/Cards/GetCardLimits:
    post:
      description: ''
      summary: Cards_GetCardLimits
      tags:
      - Cards
      operationId: Cards_GetCardLimits
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/Request'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCardLimitsResponse'
          headers: {}
  /api/Cards/GetCardOperations:
    post:
      description: ''
      summary: Cards_GetCardOperations
      tags:
      - Cards
      operationId: Cards_GetCardOperations
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/GetCardOperationsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCardOperationsResponse'
          headers: {}
  /api/Cards/GetCardPIN:
    post:
      description: ''
      summary: Cards_GetCardPIN
      tags:
      - Cards
      operationId: Cards_GetCardPIN
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/CardsGenericRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCardPINResponse'
          headers: {}
  /api/Cards/GetCardECommercePIN:
    post:
      description: ''
      summary: Cards_GetCardECommercePIN
      tags:
      - Cards
      operationId: Cards_GetCardECommercePIN
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/CardsGenericRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCardECommercePINResponse'
          headers: {}
  /api/Cards/SetCardOperations:
    post:
      description: ''
      summary: Cards_SetCardOperations
      tags:
      - Cards
      operationId: Cards_SetCardOperations
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/SetCardOperationsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetCardOperationsResponse'
          headers: {}
  /api/Cards/ChangeCardStatus:
    post:
      description: ''
      summary: Cards_ChangeCardStatus
      tags:
      - Cards
      operationId: Cards_ChangeCardStatus
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/ChangeCardStatusRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CardActionsResponse'
          headers: {}
  /api/Cards/ChangeCardLimits:
    post:
      description: ''
      summary: Cards_ChangeCardLimits
      tags:
      - Cards
      operationId: Cards_ChangeCardLimits
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/ChangeCardLimitsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CardActionsResponse'
          headers: {}
  /api/Cards/ChangeCardPIN:
    post:
      description: ''
      summary: Cards_ChangeCardPIN
      tags:
      - Cards
      operationId: Cards_ChangeCardPIN
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/CardsGenericRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CardActionsResponse'
          headers: {}
  /api/Cards/ChangeCardECommercePIN:
    post:
      description: ''
      summary: Cards_ChangeCardECommercePIN
      tags:
      - Cards
      operationId: Cards_ChangeCardECommercePIN
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/ChangeCardECommercePINRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CardActionsResponse'
          headers: {}
  /api/DirectDebit/LoadProducts:
    post:
      description: ''
      summary: DirectDebit_LoadProducts
      tags:
      - DirectDebit
      operationId: DirectDebit_LoadProducts
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/Request'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DirectDebitProductsResponse'
          headers: {}
  /api/DirectDebit/GetProduct:
    post:
      description: ''
      summary: DirectDebit_GetProduct
      tags:
      - DirectDebit
      operationId: DirectDebit_GetProduct
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/ProductsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DirectDebitProductsResponse'
          headers: {}
  /api/DirectDebit/LoadUserMandates:
    post:
      description: ''
      summary: DirectDebit_LoadUserMandates
      tags:
      - DirectDebit
      operationId: DirectDebit_LoadUserMandates
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/Request'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DirectDebitResponse'
          headers: {}
  /api/DirectDebit/LoadMandateCollections:
    post:
      description: ''
      summary: DirectDebit_LoadMandateCollections
      tags:
      - DirectDebit
      operationId: DirectDebit_LoadMandateCollections
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/DirectDebitRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DirectDebitResponse'
          headers: {}
  /api/DirectDebit/GetMaxDebitAmount:
    post:
      description: ''
      summary: DirectDebit_GetMaxDebitAmount
      tags:
      - DirectDebit
      operationId: DirectDebit_GetMaxDebitAmount
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/DirectDebitRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DirectDebitResponse'
          headers: {}
  /api/DirectDebit/Request:
    post:
      description: ''
      summary: DirectDebit_Request
      tags:
      - DirectDebit
      operationId: DirectDebit_Request
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/DirectDebitRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DirectDebitResponse'
          headers: {}
  /api/DirectDebit/Update:
    post:
      description: ''
      summary: DirectDebit_Update
      tags:
      - DirectDebit
      operationId: DirectDebit_Update
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/DirectDebitRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DirectDebitResponse'
          headers: {}
  /api/DirectDebit/Execute:
    post:
      description: ''
      summary: DirectDebit_Execute
      tags:
      - DirectDebit
      operationId: DirectDebit_Execute
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/DirectDebitRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Response'
          headers: {}
  /api/Payments/LoadPaymentProducts:
    post:
      description: ''
      summary: Payments_LoadPaymentProducts
      tags:
      - Payments
      operationId: Payments_LoadPaymentProducts
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/Request'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PaymentProductsResponse'
          headers: {}
  /api/Payments/GetPaymentProduct:
    post:
      description: ''
      summary: Payments_GetPaymentProduct
      tags:
      - Payments
      operationId: Payments_GetPaymentProduct
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/ProductsRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PaymentProductsResponse'
          headers: {}
  /api/Payments/Request:
    post:
      description: ''
      summary: Payments_Request
      tags:
      - Payments
      operationId: Payments_Request
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/PaymentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PaymentResponse'
          headers: {}
  /api/Payments/Execute:
    post:
      description: ''
      summary: Payments_Execute
      tags:
      - Payments
      operationId: Payments_Execute
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/PaymentExecuteRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Response'
          headers: {}
  /api/Payments/ValidatePaymentCode:
    post:
      description: ''
      summary: Payments_ValidatePaymentCode
      tags:
      - Payments
      operationId: Payments_ValidatePaymentCode
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/PaymentRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Response'
          headers: {}
  /api/Transfers/Request:
    post:
      description: ''
      summary: Transfers_Request
      tags:
      - Transfers
      operationId: Transfers_Request
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/TransferRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransferResponse'
          headers: {}
  /api/Transfers/Requirement3FaAndUserAcknowledgement:
    post:
      description: ''
      summary: Transfers_Requirement3FaAndUserAcknowledgement
      tags:
      - Transfers
      operationId: Transfers_Requirement3FaAndUserAcknowledgement
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/Requirement3FaAndUserAcknowledgementRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Requirement3FaAndUserAcknowledgementResponse'
          headers: {}
  /api/Transfers/Execute:
    post:
      description: ''
      summary: Transfers_Execute
      tags:
      - Transfers
      operationId: Transfers_Execute
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/TransferExecuteRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransferExecuteResponse'
          headers: {}
  /api/Transfers/Charges:
    post:
      description: ''
      summary: Transfers_Charges
      tags:
      - Transfers
      operationId: Transfers_Charges
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/TransferChargesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransferChargesResponse'
          headers: {}
  /api/Transfers/ValidateIban:
    post:
      description: ''
      summary: Transfers_ValidateIban
      tags:
      - Transfers
      operationId: Transfers_ValidateIban
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/ValidateIbanRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ValidateIbanResponse'
          headers: {}
  /api/Transfers/ValidateInBankAccount:
    post:
      description: ''
      summary: Transfers_ValidateInBankAccount
      tags:
      - Transfers
      operationId: Transfers_ValidateInBankAccount
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/ValidateAccountRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ValidateAccountResponse'
          headers: {}
  /api/Transfers/ResendVerificationCode:
    post:
      description: ''
      summary: Transfers_ResendVerificationCode
      tags:
      - Transfers
      operationId: Transfers_ResendVerificationCode
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/ResendVerificationCodeRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Response'
          headers: {}
  /api/Users/Login:
    post:
      description: ''
      summary: Users_Login
      tags:
      - Users
      operationId: Users_Login
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/LoginRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LoginFirstStepResponse'
          headers: {}
  /api/Users/LoginSecondStep:
    post:
      description: ''
      summary: Users_LoginSecondStep
      tags:
      - Users
      operationId: Users_LoginSecondStep
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/SecondStepLoginRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LoginSecondStepResponse'
          headers: {}
  /api/Users/Logout:
    post:
      description: ''
      summary: Users_Logout
      tags:
      - Users
      operationId: Users_Logout
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/Request'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Response'
          headers: {}
  /api/Users/Validate:
    post:
      description: ''
      summary: Users_Validate
      tags:
      - Users
      operationId: Users_Validate
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/Request'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserResponse'
          headers: {}
  /api/Users/UpdatePhoto:
    post:
      description: ''
      summary: Users_UpdatePhoto
      tags:
      - Users
      operationId: Users_UpdatePhoto
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/PhotoRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Response'
          headers: {}
  /api/Users/ResetPassword:
    post:
      description: ''
      summary: Users_ResetPassword
      tags:
      - Users
      operationId: Users_ResetPassword
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/ResetPasswordRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResetPasswordResponse'
          headers: {}
  /api/Users/ValidatePassword:
    post:
      description: ''
      summary: Users_ValidatePassword
      tags:
      - Users
      operationId: Users_ValidatePassword
      deprecated: false
      produces:
      - text/plain
      - application/json
      - text/json
      consumes:
      - application/json-patch+json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json-patch+json
        type: string
        description: ''
      - name: body
        in: body
        required: false
        description: ''
        schema:
          $ref: '#/definitions/ValidatePasswordRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ValidatePasswordResponse'
          headers: {}
definitions:
  Request:
    title: Request
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
  MobileValidation:
    title: MobileValidation
    type: object
    properties:
      Username:
        type: string
      LoginKey:
        type: string
      AccessToken:
        type: string
      RefreshToken:
        type: string
      CustomerCode:
        type: string
      DeviceId:
        type: string
      AppKey:
        type: string
  LogInfo:
    title: LogInfo
    type: object
    properties:
      IpAddress:
        type: string
      LanguageCode:
        type: string
      AppVersion:
        type: string
  ActionLog:
    title: ActionLog
    type: object
    properties:
      Id:
        type: integer
        format: int32
      Username:
        type: string
      Controller:
        type: string
      Action:
        type: string
      DeviceId:
        type: string
      LoginKey:
        type: string
      Date:
        type: string
        format: date-time
      IpAddress:
        type: string
      LanguageCode:
        type: string
  AccountDetailsRequest:
    title: AccountDetailsRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      Account:
        type: string
      AccountType:
        type: object
        allOf:
        - $ref: '#/definitions/TypesOfAccount'
        - description: '<br/>Description: 1 = "Savings", 2 = "TimeDeposit", 3 = "Checking", 4 = "Current", 5 = "JointCredit", 6 = "Amortizing", 7 = "FullyAmortizing", 8 = "Unexpected"'
    required:
    - Account
    - AccountType
  LoanRequest:
    title: LoanRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      Loan:
        type: string
      LoanType:
        type: object
        allOf:
        - $ref: '#/definitions/TypesOfAccount'
        - description: '<br/>Description: 1 = "Savings", 2 = "TimeDeposit", 3 = "Checking", 4 = "Current", 5 = "JointCredit", 6 = "Amortizing", 7 = "FullyAmortizing", 8 = "Unexpected"'
      DateRange:
        type: object
        allOf:
        - $ref: '#/definitions/DateRange'
        - {}
    required:
    - Loan
    - LoanType
    - DateRange
  DateRange:
    title: DateRange
    type: object
    properties:
      From:
        type: string
        format: date-time
      To:
        type: string
        format: date-time
    required:
    - From
    - To
  DeviceDetails:
    title: DeviceDetails
    type: object
    properties:
      Manufacturer:
        type: string
      Model:
        type: string
      Platform:
        type: string
      PlatformVersion:
        type: string
      DeviceType:
        type: string
      Idiom:
        type: string
  AnalyticsEvent:
    title: AnalyticsEvent
    type: object
    properties:
      ID:
        type: integer
        format: int32
      Type:
        type: object
        allOf:
        - $ref: '#/definitions/AnalyticsEventType'
        - description: '<br/>Description: 0 = "Unknown", 1 = "PageView", 2 = "Action", 3 = "Result", 4 = "Exception", 5 = "Navigation", 6 = "Session"'
      DateTime:
        type: string
        format: date-time
      IP:
        type: string
      LoginKey:
        type: string
      Message:
        type: string
      CallerMethod:
        type: string
      AppVersion:
        type: string
      AppVersionCode:
        type: string
      DeviceDetails:
        type: object
        allOf:
        - $ref: '#/definitions/DeviceDetails'
        - {}
      DeviceDetailsJSON:
        type: string
  AnalyticsEventType:
    title: AnalyticsEventType
    description: '<br/>Description: 0 = "Unknown", 1 = "PageView", 2 = "Action", 3 = "Result", 4 = "Exception", 5 = "Navigation", 6 = "Session"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    - '6'
  ActionEvent:
    title: ActionEvent
    type: object
    properties:
      ID:
        type: integer
        format: int32
      Type:
        type: object
        allOf:
        - $ref: '#/definitions/AnalyticsEventType'
        - description: '<br/>Description: 0 = "Unknown", 1 = "PageView", 2 = "Action", 3 = "Result", 4 = "Exception", 5 = "Navigation", 6 = "Session"'
      DateTime:
        type: string
        format: date-time
      IP:
        type: string
      LoginKey:
        type: string
      Message:
        type: string
      CallerMethod:
        type: string
      AppVersion:
        type: string
      AppVersionCode:
        type: string
      DeviceDetails:
        type: object
        allOf:
        - $ref: '#/definitions/DeviceDetails'
        - {}
      DeviceDetailsJSON:
        type: string
      ActionID:
        type: string
        maxLength: 30
      ActionType:
        type: string
        maxLength: 30
    required:
    - ActionID
  ExceptionEvent:
    title: ExceptionEvent
    type: object
    properties:
      ID:
        type: integer
        format: int32
      Type:
        type: object
        allOf:
        - $ref: '#/definitions/AnalyticsEventType'
        - description: '<br/>Description: 0 = "Unknown", 1 = "PageView", 2 = "Action", 3 = "Result", 4 = "Exception", 5 = "Navigation", 6 = "Session"'
      DateTime:
        type: string
        format: date-time
      IP:
        type: string
      LoginKey:
        type: string
      Message:
        type: string
      CallerMethod:
        type: string
      AppVersion:
        type: string
      AppVersionCode:
        type: string
      DeviceDetails:
        type: object
        allOf:
        - $ref: '#/definitions/DeviceDetails'
        - {}
      DeviceDetailsJSON:
        type: string
      ActionID:
        type: string
      ExceptionType:
        type: string
        maxLength: 30
      ExceptionMessage:
        type: string
      Stacktrace:
        type: string
    required:
    - ActionID
    - ExceptionType
    - ExceptionMessage
    - Stacktrace
  PageViewEvent:
    title: PageViewEvent
    type: object
    properties:
      ID:
        type: integer
        format: int32
      Type:
        type: object
        allOf:
        - $ref: '#/definitions/AnalyticsEventType'
        - description: '<br/>Description: 0 = "Unknown", 1 = "PageView", 2 = "Action", 3 = "Result", 4 = "Exception", 5 = "Navigation", 6 = "Session"'
      DateTime:
        type: string
        format: date-time
      IP:
        type: string
      LoginKey:
        type: string
      Message:
        type: string
      CallerMethod:
        type: string
      AppVersion:
        type: string
      AppVersionCode:
        type: string
      DeviceDetails:
        type: object
        allOf:
        - $ref: '#/definitions/DeviceDetails'
        - {}
      DeviceDetailsJSON:
        type: string
      PageID:
        type: string
        maxLength: 30
    required:
    - PageID
  ResultEvent:
    title: ResultEvent
    type: object
    properties:
      ID:
        type: integer
        format: int32
      Type:
        type: object
        allOf:
        - $ref: '#/definitions/AnalyticsEventType'
        - description: '<br/>Description: 0 = "Unknown", 1 = "PageView", 2 = "Action", 3 = "Result", 4 = "Exception", 5 = "Navigation", 6 = "Session"'
      DateTime:
        type: string
        format: date-time
      IP:
        type: string
      LoginKey:
        type: string
      Message:
        type: string
      CallerMethod:
        type: string
      AppVersion:
        type: string
      AppVersionCode:
        type: string
      DeviceDetails:
        type: object
        allOf:
        - $ref: '#/definitions/DeviceDetails'
        - {}
      DeviceDetailsJSON:
        type: string
      ActionID:
        type: string
        maxLength: 30
      Status:
        type: string
        maxLength: 30
      DurationMillis:
        type: integer
        format: int32
    required:
    - ActionID
    - Status
    - DurationMillis
  SessionEvent:
    title: SessionEvent
    type: object
    properties:
      ID:
        type: integer
        format: int32
      Type:
        type: object
        allOf:
        - $ref: '#/definitions/AnalyticsEventType'
        - description: '<br/>Description: 0 = "Unknown", 1 = "PageView", 2 = "Action", 3 = "Result", 4 = "Exception", 5 = "Navigation", 6 = "Session"'
      DateTime:
        type: string
        format: date-time
      IP:
        type: string
      LoginKey:
        type: string
      Message:
        type: string
      CallerMethod:
        type: string
      AppVersion:
        type: string
      AppVersionCode:
        type: string
      DeviceDetails:
        type: object
        allOf:
        - $ref: '#/definitions/DeviceDetails'
        - {}
      DeviceDetailsJSON:
        type: string
      DateTimeStart:
        type: string
        format: date-time
      DateTimeEnd:
        type: string
        format: date-time
      DurationMillis:
        type: integer
        format: int32
    required:
    - DateTimeStart
    - DateTimeEnd
    - DurationMillis
  NavigationEvent:
    title: NavigationEvent
    type: object
    properties:
      ID:
        type: integer
        format: int32
      Type:
        type: object
        allOf:
        - $ref: '#/definitions/AnalyticsEventType'
        - description: '<br/>Description: 0 = "Unknown", 1 = "PageView", 2 = "Action", 3 = "Result", 4 = "Exception", 5 = "Navigation", 6 = "Session"'
      DateTime:
        type: string
        format: date-time
      IP:
        type: string
      LoginKey:
        type: string
      Message:
        type: string
      CallerMethod:
        type: string
      AppVersion:
        type: string
      AppVersionCode:
        type: string
      DeviceDetails:
        type: object
        allOf:
        - $ref: '#/definitions/DeviceDetails'
        - {}
      DeviceDetailsJSON:
        type: string
      NavigationType:
        type: string
        maxLength: 30
      RelatedItem:
        type: string
        maxLength: 70
    required:
    - NavigationType
  InsertAnalyticsRequest:
    title: InsertAnalyticsRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      ActionEvents:
        type: array
        items:
          $ref: '#/definitions/ActionEvent'
      ExceptionEvents:
        type: array
        items:
          $ref: '#/definitions/ExceptionEvent'
      PageViewEvents:
        type: array
        items:
          $ref: '#/definitions/PageViewEvent'
      ResultEvents:
        type: array
        items:
          $ref: '#/definitions/ResultEvent'
      SessionEvents:
        type: array
        items:
          $ref: '#/definitions/SessionEvent'
      NavigationEvents:
        type: array
        items:
          $ref: '#/definitions/NavigationEvent'
    required:
    - ActionEvents
    - ExceptionEvents
    - PageViewEvents
    - ResultEvents
    - SessionEvents
    - NavigationEvents
  LogModel:
    title: LogModel
    type: object
    properties:
      Id:
        type: integer
        format: int32
      Message:
        type: string
      Username:
        type: string
        maxLength: 30
      Date:
        type: string
        format: date-time
  AppLog:
    title: AppLog
    type: object
    properties:
      Id:
        type: integer
        format: int32
      Message:
        type: string
      Username:
        type: string
        maxLength: 30
      Date:
        type: string
        format: date-time
      CallerFunction:
        type: string
        maxLength: 150
      DetailMessage:
        type: string
      Stacktrace:
        type: string
      DeviceId:
        type: string
        maxLength: 70
      DeviceDetails:
        type: string
        maxLength: 150
      LoginKey:
        type: string
        maxLength: 70
      AppKey:
        type: string
        maxLength: 70
      CurrentVersion:
        type: string
        maxLength: 20
    required:
    - CallerFunction
  AnalyticsRequest:
    title: AnalyticsRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      AppLogs:
        type: array
        items:
          $ref: '#/definitions/AppLog'
      CurrentVersion:
        type: string
    required:
    - AppLogs
    - CurrentVersion
  CardDetailsRequest:
    title: CardDetailsRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      Card:
        type: string
      DateFrom:
        type: string
        format: date-time
      DateTo:
        type: string
        format: date-time
    required:
    - Card
    - DateFrom
    - DateTo
  GetCardOperationsRequest:
    title: GetCardOperationsRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      AccountNumber:
        type: string
    required:
    - AccountNumber
  CardsGenericRequest:
    title: CardsGenericRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      CardToken:
        type: string
    required:
    - CardToken
  SetCardOperationsRequest:
    title: SetCardOperationsRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      AccountNumber:
        type: string
      CardOperations:
        type: array
        items:
          $ref: '#/definitions/CardOperation'
    required:
    - AccountNumber
    - CardOperations
  ChangeCardLimitsRequest:
    title: ChangeCardLimitsRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      CardToken:
        type: string
      CardLimits:
        type: array
        items:
          $ref: '#/definitions/CardLimit'
    required:
    - CardToken
    - CardLimits
  ChangeCardStatusRequest:
    title: ChangeCardStatusRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      CardToken:
        type: string
      CardStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/CardStatus'
        - description: '<br/>Description: 0 = "Inactive", 1 = "Active", 2 = "Lost", 3 = "Stolen", 4 = "Restricted", 6 = "Blocked", 9 = "Closed", 10 = "Unexpected", 101 = "ActiveFullyOperational", 102 = "InactiveActivationPending", 103 = "FrozenByCustomer", 104 = "FrozenBySnappi", 105 = "CanceledLostCard", 106 = "CanceledStolenCard", 107 = "CanceledSuspectFraud", 108 = "CanceledByUser", 109 = "CanceledByAntifraudSnappi", 110 = "CanceledNonDelivery", 111 = "CanceledExpiredCard"'
    required:
    - CardToken
    - CardStatusCode
  CardStatus:
    title: CardStatus
    description: '<br/>Description: 0 = "Inactive", 1 = "Active", 2 = "Lost", 3 = "Stolen", 4 = "Restricted", 6 = "Blocked", 9 = "Closed", 10 = "Unexpected", 101 = "ActiveFullyOperational", 102 = "InactiveActivationPending", 103 = "FrozenByCustomer", 104 = "FrozenBySnappi", 105 = "CanceledLostCard", 106 = "CanceledStolenCard", 107 = "CanceledSuspectFraud", 108 = "CanceledByUser", 109 = "CanceledByAntifraudSnappi", 110 = "CanceledNonDelivery", 111 = "CanceledExpiredCard"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
    - '6'
    - '9'
    - '10'
    - '101'
    - '102'
    - '103'
    - '104'
    - '105'
    - '106'
    - '107'
    - '108'
    - '109'
    - '110'
    - '111'
  ChangeCardECommercePINRequest:
    title: ChangeCardECommercePINRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      CardNumberLastDigits:
        type: string
      CardType:
        type: object
        allOf:
        - $ref: '#/definitions/CardType'
        - description: '<br/>Description: 1 = "Debit", 2 = "Checking", 3 = "Credit", 4 = "Unexpected"'
      CardExpirationDate:
        type: string
        format: date
      EPinValue:
        type: string
    required:
    - CardNumberLastDigits
    - CardType
    - CardExpirationDate
    - EPinValue
  ChequesRequest:
    title: ChequesRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      ChequesFilter:
        type: object
        allOf:
        - $ref: '#/definitions/SearchFilter'
        - {}
      ChequeId:
        type: string
      ChequeNumber:
        type: string
      ChequeType:
        type: object
        allOf:
        - $ref: '#/definitions/ChequeType'
        - description: '<br/>Description: 0 = "Private", 1 = "Bank"'
    required:
    - ChequesFilter
    - ChequeId
    - ChequeNumber
    - ChequeType
  SearchFilter:
    title: SearchFilter
    type: object
    properties:
      AllAccountsSelected:
        type: boolean
      SelectedAccountIDs:
        type: array
        items:
          type: string
      ContactIbanAndAccountNumber:
        type: array
        items:
          type: string
      TimePeriod:
        type: object
        allOf:
        - $ref: '#/definitions/TimePeriod'
        - description: '<br/>Description: 0 = "THIS_WEEK", 1 = "LAST_WEEK", 2 = "THIS_MONTH", 3 = "LAST_MONTH", 4 = "THIS_YEAR", 5 = "LAST_YEAR", 6 = "CUSTOM", 7 = "LAST_X_DAYS", 8 = "LATEST", 9 = "MONTH", 10 = "YEAR", 11 = "LAST_6_MONTHS", 12 = "LAST_9_MONTHS", 13 = "LAST_12_MONTHS", 14 = "NONE"'
      LatestCount:
        type: integer
        format: int32
      LastDaysCount:
        type: integer
        format: int32
      DateRange:
        type: object
        allOf:
        - $ref: '#/definitions/DateRange'
        - {}
      AmountRange:
        type: object
        allOf:
        - $ref: '#/definitions/AmountRange'
        - {}
    required:
    - AllAccountsSelected
    - TimePeriod
  TimePeriod:
    title: TimePeriod
    description: '<br/>Description: 0 = "THIS_WEEK", 1 = "LAST_WEEK", 2 = "THIS_MONTH", 3 = "LAST_MONTH", 4 = "THIS_YEAR", 5 = "LAST_YEAR", 6 = "CUSTOM", 7 = "LAST_X_DAYS", 8 = "LATEST", 9 = "MONTH", 10 = "YEAR", 11 = "LAST_6_MONTHS", 12 = "LAST_9_MONTHS", 13 = "LAST_12_MONTHS", 14 = "NONE"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    - '6'
    - '7'
    - '8'
    - '9'
    - '10'
    - '11'
    - '12'
    - '13'
    - '14'
  AmountRange:
    title: AmountRange
    type: object
    properties:
      From:
        type: number
        format: double
      To:
        type: number
        format: double
    required:
    - From
    - To
  ContactsRequest:
    title: ContactsRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      ContactId:
        type: string
      Contact:
        type: object
        allOf:
        - $ref: '#/definitions/Contact'
        - {}
    required:
    - Contact
  ProductsRequest:
    title: ProductsRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      ProductCode:
        type: string
      OnlinePayment:
        type: boolean
      Product:
        type: object
        allOf:
        - $ref: '#/definitions/PaymentProduct'
        - {}
    required:
    - Product
  DirectDebitRequest:
    title: DirectDebitRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      Mandate:
        type: object
        allOf:
        - $ref: '#/definitions/Mandate'
        - {}
      MandateCode:
        type: string
      MandateCommandToken:
        type: string
      Password3FA:
        type: string
    required:
    - Mandate
  DirectOrderRequest:
    title: DirectOrderRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      OrderID:
        type: string
      DirectOrder:
        type: object
        allOf:
        - $ref: '#/definitions/DirectOrderDetails'
        - {}
    required:
    - OrderID
    - DirectOrder
  ActiveUserDevicesRequest:
    title: ActiveUserDevicesRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      Username:
        type: string
    required:
    - Username
  AforRequest:
    title: AforRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      Salary:
        type: number
        format: double
      Year:
        type: string
    required:
    - Salary
    - Year
  ContractsRequest:
    title: ContractsRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      ContractCode:
        type: string
      FileName:
        type: string
    required:
    - ContractCode
    - FileName
  GuaranteeLetterRequest:
    title: GuaranteeLetterRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      FileID:
        type: string
    required:
    - FileID
  CommandRequest:
    title: CommandRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      PendingCommand:
        type: string
      Password3FA:
        type: string
    required:
    - PendingCommand
  IrisUpdateInfoRequest:
    title: IrisUpdateInfoRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      CommandToken:
        type: string
      CustomerInfo:
        type: object
        allOf:
        - $ref: '#/definitions/IrisCustomerInfo'
        - {}
    required:
    - CommandToken
    - CustomerInfo
  IrisCustomerInfo:
    title: IrisCustomerInfo
    type: object
    properties:
      IsActive:
        type: boolean
      Alias:
        type: object
        allOf:
        - $ref: '#/definitions/IrisAlias'
        - {}
      AccountIban:
        type: string
      AccountNumber:
        type: string
    required:
    - IsActive
    - Alias
    - AccountIban
    - AccountNumber
  IrisData:
    title: IrisData
    type: object
    properties:
      IsActive:
        type: boolean
      Alias:
        type: object
        allOf:
        - $ref: '#/definitions/IrisAlias'
        - {}
      AccountIban:
        type: string
    required:
    - IsActive
    - Alias
    - AccountIban
  IrisTransferRequest:
    title: IrisTransferRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      CommandToken:
        type: string
      IrisTransfer:
        type: object
        allOf:
        - $ref: '#/definitions/IrisTransfer'
        - {}
      UserAgreedToProceedWithout3FA:
        type: boolean
    required:
    - CommandToken
    - IrisTransfer
    - UserAgreedToProceedWithout3FA
  IrisTransfer:
    title: IrisTransfer
    type: object
    properties:
      DebtorAccount:
        type: string
      CreditorAlias:
        type: object
        allOf:
        - $ref: '#/definitions/IrisAlias'
        - {}
      Amount:
        type: number
        format: double
      CurrencyId:
        type: integer
        format: int32
      Reason:
        type: string
    required:
    - DebtorAccount
    - CreditorAlias
    - Amount
    - CurrencyId
    - Reason
  NotificationsRequest:
    title: NotificationsRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      NotificationId:
        type: integer
        format: int32
      Notification:
        type: object
        allOf:
        - $ref: '#/definitions/NotificationModel'
        - {}
    required:
    - NotificationId
    - Notification
  PaymentRequest:
    title: PaymentRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      Payment:
        type: object
        allOf:
        - $ref: '#/definitions/Payment'
        - {}
    required:
    - Payment
  PaymentExecuteRequest:
    title: PaymentExecuteRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      PaymentType:
        type: object
        allOf:
        - $ref: '#/definitions/PaymentType'
        - description: '<br/>Description: 0 = "Bill", 1 = "CreditCard"'
      PaymentCommandToken:
        type: string
      Password3FA:
        type: string
    required:
    - PaymentType
    - PaymentCommandToken
  AcceptPoliciesRequest:
    title: AcceptPoliciesRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      AcknowledgedPolicies:
        type: array
        items:
          type: string
    required:
    - AcknowledgedPolicies
  PushRequest:
    title: PushRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      Title:
        type: string
      Body:
        type: string
      Type:
        type: object
        allOf:
        - $ref: '#/definitions/NotificationType'
        - description: '<br/>Description: 1 = "Notification", 2 = "Transaction", 3 = "Verification", 4 = "Message", 5 = "Information", 6 = "LogoutUser", 7 = "StrongCustomerAuthentication", 8 = "StrongCustomerAuthenticationLogin", 9 = "EPaySuccess", 10 = "EPayRedirect", 11 = "EPayFailure", 12 = "FincludeAssesmentSuccess", 13 = "FincludeAssesmentFail", 14 = "ThreeDSecure"'
      ExternalID:
        type: string
      SensitiveContent:
        type: boolean
      Recipient:
        type: object
        allOf:
        - $ref: '#/definitions/PushRecipient'
        - description: '<br/>Description: 0 = "SINGLE_USER", 1 = "LIST_OF_USERS", 2 = "ALL_USERS"'
      Username:
        type: string
      UsernamesList:
        type: array
        items:
          type: string
      CommandToken:
        type: string
      ExpirationDate:
        type: string
        format: date-time
    required:
    - Title
    - Body
    - Type
    - Recipient
    - Username
    - UsernamesList
    - CommandToken
  PushRecipient:
    title: PushRecipient
    description: '<br/>Description: 0 = "SINGLE_USER", 1 = "LIST_OF_USERS", 2 = "ALL_USERS"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
  TemplatesRequest:
    title: TemplatesRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      TemplateID:
        type: integer
        format: int32
      TemplateName:
        type: string
      RoleName:
        type: string
      templateJson:
        type: object
        allOf:
        - $ref: '#/definitions/TemplateModel'
        - {}
    required:
    - TemplateName
    - RoleName
    - templateJson
  TransactionsRequest:
    title: TransactionsRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      TransactionsFilter:
        type: object
        allOf:
        - $ref: '#/definitions/SearchFilter'
        - {}
      TransactionID:
        type: integer
        format: int32
      VoucherName:
        type: string
      VoucherEmail:
        type: string
      AccountsFromMobile:
        type: array
        items:
          type: string
      RequestID:
        type: string
        format: uuid
    required:
    - TransactionsFilter
    - TransactionID
    - VoucherName
    - VoucherEmail
    - AccountsFromMobile
    - RequestID
  MonthlyOverviewRequest:
    title: MonthlyOverviewRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      Account:
        type: string
    required:
    - Account
  AnnualStatsRequest:
    title: AnnualStatsRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      SearchFilter:
        type: object
        allOf:
        - $ref: '#/definitions/StatsSearchFilter'
        - {}
    required:
    - SearchFilter
  StatsSearchFilter:
    title: StatsSearchFilter
    type: object
    properties:
      AllAccountsSelected:
        type: boolean
      SelectedAccountIDs:
        type: array
        items:
          type: string
      SelectedYear:
        type: integer
        format: int32
      SearchBy:
        type: object
        allOf:
        - $ref: '#/definitions/TimePeriod'
        - description: '<br/>Description: 0 = "THIS_WEEK", 1 = "LAST_WEEK", 2 = "THIS_MONTH", 3 = "LAST_MONTH", 4 = "THIS_YEAR", 5 = "LAST_YEAR", 6 = "CUSTOM", 7 = "LAST_X_DAYS", 8 = "LATEST", 9 = "MONTH", 10 = "YEAR", 11 = "LAST_6_MONTHS", 12 = "LAST_9_MONTHS", 13 = "LAST_12_MONTHS", 14 = "NONE"'
    required:
    - AllAccountsSelected
    - SelectedYear
    - SearchBy
  TransferRequest:
    title: TransferRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      Transfer:
        type: object
        allOf:
        - $ref: '#/definitions/Transfer'
        - {}
    required:
    - Transfer
  Requirement3FaAndUserAcknowledgementRequest:
    title: Requirement3FaAndUserAcknowledgementRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      Amount:
        type: number
        format: double
      IsMassTransaction:
        type: boolean
      IsDirectOrder:
        type: boolean
      IsDirectDebit:
        type: boolean
    required:
    - Amount
    - IsMassTransaction
    - IsDirectOrder
    - IsDirectDebit
  TransferExecuteRequest:
    title: TransferExecuteRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      TransferType:
        type: object
        allOf:
        - $ref: '#/definitions/TransferType'
        - description: '<br/>Description: 0 = "Unknown", 1 = "ToMyAccount", 2 = "ToBank", 3 = "ToOtherBank", 4 = "ToForeignBank", 5 = "Iris"'
      TransferCommandToken:
        type: string
      Password3FA:
        type: string
    required:
    - TransferType
    - TransferCommandToken
  TransferChargesRequest:
    title: TransferChargesRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      TransferDetails:
        type: object
        allOf:
        - $ref: '#/definitions/ChargesCalculationValues'
        - {}
    required:
    - TransferDetails
  ChargesCalculationValues:
    title: ChargesCalculationValues
    type: object
    properties:
      IsCreditTransfer:
        type: boolean
      IbanFrom:
        type: string
      IbanTo:
        type: string
      CountryCode:
        type: string
      BIC:
        type: string
      IsFoc:
        type: boolean
      Amount:
        type: number
        format: double
      CurrencyId:
        type: integer
        format: int32
      IsOnline:
        type: boolean
  ValidateIbanRequest:
    title: ValidateIbanRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      IbanToValidate:
        type: string
    required:
    - IbanToValidate
  ValidateAccountRequest:
    title: ValidateAccountRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      AccountToValidate:
        type: string
    required:
    - AccountToValidate
  ResendVerificationCodeRequest:
    title: ResendVerificationCodeRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      CommandToken:
        type: string
    required:
    - CommandToken
  LoginRequest:
    title: LoginRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      Password:
        type: string
      OperatingSystem:
        type: object
        allOf:
        - $ref: '#/definitions/OperatingSystem'
        - description: '<br/>Description: 0 = "Unknown", 1 = "Android", 2 = "iOS"'
    required:
    - Password
    - OperatingSystem
  OperatingSystem:
    title: OperatingSystem
    description: '<br/>Description: 0 = "Unknown", 1 = "Android", 2 = "iOS"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
  SecondStepLoginRequest:
    title: SecondStepLoginRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      ValidationCode:
        type: string
      CodeEntryId:
        type: integer
        format: int32
      DeviceName:
        type: string
      DeviceDetails:
        type: string
      NeedsEmailValidation:
        type: boolean
    required:
    - ValidationCode
    - CodeEntryId
    - DeviceName
    - DeviceDetails
    - NeedsEmailValidation
  PhotoRequest:
    title: PhotoRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      PhotoBase64:
        type: string
    required:
    - PhotoBase64
  ResetPasswordRequest:
    title: ResetPasswordRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      NewPassword:
        type: string
      NewPasswordConfirm:
        type: string
    required:
    - NewPassword
    - NewPasswordConfirm
  ValidatePasswordRequest:
    title: ValidatePasswordRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      NewPassword:
        type: string
    required:
    - NewPassword
  UpdateUserSettingsRequest:
    title: UpdateUserSettingsRequest
    type: object
    properties:
      Validation:
        type: object
        allOf:
        - $ref: '#/definitions/MobileValidation'
        - {}
      LogInfo:
        type: object
        allOf:
        - $ref: '#/definitions/LogInfo'
        - {}
      ActionLog:
        type: object
        allOf:
        - $ref: '#/definitions/ActionLog'
        - {}
      ForceLoad:
        type: boolean
      HomeViewsJson:
        type: string
      FavoriteOperationsJson:
        type: string
      UserPreferencesJson:
        type: string
    required:
    - HomeViewsJson
    - FavoriteOperationsJson
    - UserPreferencesJson
  AcceptedPoliciesResponse:
    title: AcceptedPoliciesResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
  Account:
    title: Account
    type: object
    properties:
      id:
        type: string
      accountType:
        type: object
        allOf:
        - $ref: '#/definitions/TypesOfAccount'
        - description: '<br/>Description: 1 = "Savings", 2 = "TimeDeposit", 3 = "Checking", 4 = "Current", 5 = "JointCredit", 6 = "Amortizing", 7 = "FullyAmortizing", 8 = "Unexpected"'
      iban:
        type: string
      alias:
        type: string
      accountNumber:
        type: string
      accountingBalance:
        type: number
        format: double
      availableBalance:
        type: number
        format: double
      rights:
        type: object
        allOf:
        - $ref: '#/definitions/AccountRights'
        - description: '<br/>Description: 0 = "CanNotSeeAccount", 1 = "CanNotSeeBalance", 2 = "OnlyCanSeeBalance", 3 = "CanDebit", 4 = "CanCredit", 5 = "CanDoAnything"'
      currencyID:
        type: string
      currencyType:
        type: object
        allOf:
        - $ref: '#/definitions/Currency'
        - description: '<br/>Description: 0 = "Undefined", 1 = "EUR", 2 = "USD", 3 = "GBP"'
      productType:
        type: object
        allOf:
        - $ref: '#/definitions/ProductCategory'
        - description: '<br/>Description: 1 = "Plain", 2 = "Payroll"'
  AccountRights:
    title: AccountRights
    description: '<br/>Description: 0 = "CanNotSeeAccount", 1 = "CanNotSeeBalance", 2 = "OnlyCanSeeBalance", 3 = "CanDebit", 4 = "CanCredit", 5 = "CanDoAnything"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
  AccountsResponse:
    title: AccountsResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      normalAccountDetails:
        type: object
        allOf:
        - $ref: '#/definitions/NormalAccountDetails'
        - {}
      timeDepositAccountDetails:
        type: object
        allOf:
        - $ref: '#/definitions/TimeDepositAccountDetails'
        - {}
      accounts:
        type: array
        items:
          $ref: '#/definitions/Account'
      loans:
        type: array
        items:
          $ref: '#/definitions/Account'
  ActiveDevicesResponse:
    title: ActiveDevicesResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      activeDevices:
        type: array
        items:
          $ref: '#/definitions/ActiveUserDevice'
  ActiveUserDevice:
    title: ActiveUserDevice
    type: object
    properties:
      deviceID:
        type: string
      deviceName:
        type: string
      deviceDetails:
        type: string
      lastAction:
        type: string
        format: date-time
  Afor:
    title: Afor
    type: object
    properties:
      salary:
        type: number
        format: double
      amountNeeded:
        type: number
        format: double
  AforData:
    title: AforData
    type: object
    properties:
      totalAmount:
        type: number
        format: double
      tin:
        type: string
      aforMonhtly:
        type: array
        items:
          $ref: '#/definitions/AforTransaction'
  AforResponse:
    title: AforResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      afor:
        type: object
        allOf:
        - $ref: '#/definitions/Afor'
        - {}
  AforTransaction:
    title: AforTransaction
    type: object
    properties:
      dateType:
        type: string
      groupType:
        type: string
      recordType:
        type: string
      taxCode:
        type: string
      totalAmount:
        type: number
        format: double
      transactionCategory:
        type: object
        allOf:
        - $ref: '#/definitions/TransactionCategoryType'
        - description: '<br/>Description: 0 = "General", 1 = "Medical", 2 = "Pharmaceutical", 3 = "Vehicles", 4 = "Unknown"'
  AforTransactionsResponse:
    title: AforTransactionsResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      aforData:
        type: object
        allOf:
        - $ref: '#/definitions/AforData'
        - {}
  AmortizedInstallment:
    title: AmortizedInstallment
    type: object
    properties:
      priority:
        type: integer
        format: int32
      expirationDate:
        type: string
        format: date-time
      hasInterestToAccount:
        type: boolean
      interestsAccounting:
        type: boolean
      interestsUnaccountedAmount:
        type: number
        format: double
      interestsAccountingAmount:
        type: number
        format: double
      installmentRemainingAmount:
        type: number
        format: double
  AmortizedLoanDetails:
    title: AmortizedLoanDetails
    type: object
    properties:
      beneficiaries:
        type: array
        items:
          type: string
      activity:
        type: string
      interest:
        type: string
      kad:
        type: string
      status:
        type: string
      mainBeneficiary:
        type: string
      form:
        type: string
      overdraftLimit:
        type: number
        format: double
      contract:
        type: string
      linkedAccounts:
        type: array
        items:
          $ref: '#/definitions/LinkedAccount'
      amortizedInstallments:
        type: array
        items:
          $ref: '#/definitions/AmortizedInstallment'
  AnnualOverview:
    title: AnnualOverview
    type: object
    properties:
      year:
        type: integer
        format: int32
      annualIncome:
        type: number
        format: double
      annualExpenses:
        type: number
        format: double
      transactionsNumber:
        type: integer
        format: int32
  AnnualStatsResponse:
    title: AnnualStatsResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      monthlyStats:
        type: array
        items:
          $ref: '#/definitions/MonthlyOverview'
      annualStats:
        type: array
        items:
          $ref: '#/definitions/AnnualOverview'
  BalanceForCurrency:
    title: BalanceForCurrency
    type: object
    properties:
      currency:
        type: object
        allOf:
        - $ref: '#/definitions/Currency'
        - description: '<br/>Description: 0 = "Undefined", 1 = "EUR", 2 = "USD", 3 = "GBP"'
      income:
        type: number
        format: double
      expenses:
        type: number
        format: double
      balance:
        readOnly: true
        type: number
        format: double
  BankInfo:
    title: BankInfo
    type: object
    properties:
      bankName:
        type: string
      contactText:
        type: string
      email:
        type: string
      phone:
        type: string
      policyText:
        type: string
  BankMessage:
    title: BankMessage
    type: object
    properties:
      title:
        type: string
      message:
        type: string
      expirationDate:
        type: string
        format: date-time
      username:
        type: string
      isRead:
        type: boolean
  BankResponse:
    title: BankResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      bankInfo:
        type: object
        allOf:
        - $ref: '#/definitions/BankInfo'
        - {}
      atmAndBranches:
        type: array
        items:
          $ref: '#/definitions/PlaceOnMap'
      bankMessages:
        type: array
        items:
          $ref: '#/definitions/BankMessage'
  BehavAuthSettings:
    title: BehavAuthSettings
    type: object
    properties:
      isAvailable:
        type: boolean
      apiKey:
        type: string
      userVerificationSecret:
        type: string
  Card:
    title: Card
    type: object
    properties:
      cardAccounts:
        type: array
        items:
          $ref: '#/definitions/CardAccount'
      cardExpirationDate:
        type: string
        format: date-time
      cardHash:
        type: string
      cardLastDigits:
        type: string
      cardStatus:
        type: object
        allOf:
        - $ref: '#/definitions/CardStatus'
        - description: '<br/>Description: 0 = "Inactive", 1 = "Active", 2 = "Lost", 3 = "Stolen", 4 = "Restricted", 6 = "Blocked", 9 = "Closed", 10 = "Unexpected", 101 = "ActiveFullyOperational", 102 = "InactiveActivationPending", 103 = "FrozenByCustomer", 104 = "FrozenBySnappi", 105 = "CanceledLostCard", 106 = "CanceledStolenCard", 107 = "CanceledSuspectFraud", 108 = "CanceledByUser", 109 = "CanceledByAntifraudSnappi", 110 = "CanceledNonDelivery", 111 = "CanceledExpiredCard"'
      cardType:
        type: object
        allOf:
        - $ref: '#/definitions/CardType'
        - description: '<br/>Description: 1 = "Debit", 2 = "Checking", 3 = "Credit", 4 = "Unexpected"'
      cardsBodyType:
        type: object
        allOf:
        - $ref: '#/definitions/CardsBodyType'
        - description: '<br/>Description: 1 = "Physical", 2 = "Digital"'
      cardToken:
        type: string
      embossName:
        type: string
      cardAlias:
        type: string
      id:
        type: integer
        format: int32
      cardCreationDate:
        type: string
        format: date-time
      cardBinTitle:
        type: string
  CardAccount:
    title: CardAccount
    type: object
    properties:
      accountNumber:
        type: string
      accountAlias:
        type: string
      accountBalance:
        type: number
        format: double
  CardActionsResponse:
    title: CardActionsResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      commandToken:
        type: string
  CardDetails:
    title: CardDetails
    type: object
    properties:
      cardNumber:
        type: string
      customerCardTransactions:
        type: array
        items:
          $ref: '#/definitions/CardTransactionsInfo'
  CardDetailsResponse:
    title: CardDetailsResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      cardDetails:
        type: object
        allOf:
        - $ref: '#/definitions/CardDetails'
        - {}
  CardLimit:
    title: CardLimit
    type: object
    properties:
      type:
        type: object
        allOf:
        - $ref: '#/definitions/CardLimitType'
        - description: '<br/>Description: 1 = "DailyATM", 2 = "WeeklyATM", 3 = "MonthlyATM", 4 = "YearlyATM", 5 = "DailyATM_OnUs", 6 = "DailyATM_OnSystem", 7 = "DailyATM_Domestic", 8 = "DailyATM_International", 9 = "DailyECOM", 10 = "WeeklyECOM", 11 = "MonthlyECOM", 12 = "YearlyECOM", 13 = "DailyPOS", 14 = "WeeklyPOS", 15 = "MonthlyPOS", 16 = "YearlyPOS", 17 = "DailyMOTO", 18 = "WeeklyMOTO", 19 = "MonthlyMOTO", 20 = "YearlyMOTO", 21 = "DailyNonCash", 99 = "DailyOverall"'
      value:
        type: number
        format: double
      maxValue:
        type: number
        format: double
      isLimitEnabled:
        type: boolean
  CardLimitType:
    title: CardLimitType
    description: '<br/>Description: 1 = "DailyATM", 2 = "WeeklyATM", 3 = "MonthlyATM", 4 = "YearlyATM", 5 = "DailyATM_OnUs", 6 = "DailyATM_OnSystem", 7 = "DailyATM_Domestic", 8 = "DailyATM_International", 9 = "DailyECOM", 10 = "WeeklyECOM", 11 = "MonthlyECOM", 12 = "YearlyECOM", 13 = "DailyPOS", 14 = "WeeklyPOS", 15 = "MonthlyPOS", 16 = "YearlyPOS", 17 = "DailyMOTO", 18 = "WeeklyMOTO", 19 = "MonthlyMOTO", 20 = "YearlyMOTO", 21 = "DailyNonCash", 99 = "DailyOverall"'
    type: integer
    format: int32
    enum:
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    - '6'
    - '7'
    - '8'
    - '9'
    - '10'
    - '11'
    - '12'
    - '13'
    - '14'
    - '15'
    - '16'
    - '17'
    - '18'
    - '19'
    - '20'
    - '21'
    - '99'
  CardOperation:
    title: CardOperation
    type: object
    properties:
      type:
        type: integer
        format: int32
      value:
        type: string
  CardTransactionsInfo:
    title: CardTransactionsInfo
    type: object
    properties:
      transactionDate:
        type: string
        format: date-time
      id:
        type: integer
        format: int32
      merchantName:
        type: string
      amount:
        type: number
        format: double
      title:
        type: string
  CardType:
    title: CardType
    description: '<br/>Description: 1 = "Debit", 2 = "Checking", 3 = "Credit", 4 = "Unexpected"'
    type: integer
    format: int32
    enum:
    - '1'
    - '2'
    - '3'
    - '4'
  CardsBodyType:
    title: CardsBodyType
    description: '<br/>Description: 1 = "Physical", 2 = "Digital"'
    type: integer
    format: int32
    enum:
    - '1'
    - '2'
  ChargeBearer:
    title: ChargeBearer
    description: '<br/>Description: 0 = "Shared", 1 = "Debtor"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
  Cheque:
    title: Cheque
    type: object
    properties:
      id:
        type: integer
        format: int32
      number:
        type: string
      title:
        type: string
      amount:
        type: number
        format: double
      type:
        type: object
        allOf:
        - $ref: '#/definitions/ChequeType'
        - description: '<br/>Description: 0 = "Private", 1 = "Bank"'
      publicationDate:
        type: string
        format: date-time
      paidDate:
        type: string
        format: date-time
      account:
        type: string
  ChequeDetails:
    title: ChequeDetails
    type: object
    properties:
      accountCode:
        type: string
      amount:
        type: number
        format: double
      balance:
        type: number
        format: double
      code:
        type: string
      currency:
        type: string
      iban:
        type: string
      status:
        type: string
      type:
        type: string
      publicationDate:
        type: string
        format: date-time
      paidDate:
        type: string
        format: date-time
      appearanceDate:
        type: string
        format: date-time
      inOrder:
        type: string
      place:
        type: string
      rejectionCode:
        type: string
      specialCharacters:
        type: string
  ChequeType:
    title: ChequeType
    description: '<br/>Description: 0 = "Private", 1 = "Bank"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
  ChequesResponse:
    title: ChequesResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      chequeDetails:
        type: object
        allOf:
        - $ref: '#/definitions/ChequeDetails'
        - {}
      bankCheques:
        type: array
        items:
          $ref: '#/definitions/Cheque'
      privateCheques:
        type: array
        items:
          $ref: '#/definitions/PrivateCheque'
  CommandType:
    title: CommandType
    description: '<br/>Description: 0 = "Unknown", 1 = "TransferToMyAccount", 2 = "TransferToThirdParty", 3 = "TransferToOtherBank", 4 = "BillPayment", 5 = "CreditCardPayment", 6 = "DirectDebit", 7 = "IrisTransfer", 8 = "Card_GetPin", 9 = "Card_ChangePin", 10 = "Card_UnblockPin", 11 = "Card_GetECommercePin", 12 = "Card_ChangeECommercePin", 13 = "Card_ChangeAllowedOperations", 14 = "Card_ChangeLimits", 15 = "Card_ChangeStatus", 16 = "Card_GetSensitiveInformation", 17 = "Card_SetCVV", 18 = "Card_ReIssue", 19 = "Card_ChangeAlias"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    - '6'
    - '7'
    - '8'
    - '9'
    - '10'
    - '11'
    - '12'
    - '13'
    - '14'
    - '15'
    - '16'
    - '17'
    - '18'
    - '19'
  ConsentAcknowledgement:
    title: ConsentAcknowledgement
    type: object
    properties:
      consentCode:
        type: string
      hasAcknowledged:
        type: boolean
      dateAccepted:
        type: string
        format: date-time
      channel:
        type: string
  Contact:
    title: Contact
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      photoBase64:
        type: string
      transferType:
        type: object
        allOf:
        - $ref: '#/definitions/TransferType'
        - description: '<br/>Description: 0 = "Unknown", 1 = "ToMyAccount", 2 = "ToBank", 3 = "ToOtherBank", 4 = "ToForeignBank", 5 = "Iris"'
      accountNumber:
        type: string
      iban:
        type: string
      beneficiaryFullName:
        type: string
      bic:
        type: string
      colorResourceName:
        type: string
      timesUsed:
        type: integer
        format: int32
  ContactsResponse:
    title: ContactsResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      contact:
        type: object
        allOf:
        - $ref: '#/definitions/Contact'
        - {}
      contactList:
        type: array
        items:
          $ref: '#/definitions/Contact'
  Contract:
    title: Contract
    type: object
    properties:
      syM_DETAILS_FILES_CONTENT:
        type: string
      syM_DETAILS_FILES_FILENAME:
        type: string
      syM_DETAILS_FILES_FILE_TYPE:
        type: integer
        format: int32
      syM_MAIN_KODI:
        type: string
      syM_MAIN_TITLE:
        type: string
  ContractsResponse:
    title: ContractsResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      contractsList:
        type: array
        items:
          $ref: '#/definitions/Contract'
      contract:
        type: object
        allOf:
        - $ref: '#/definitions/Contract'
        - {}
      contractFile:
        type: string
  Currency:
    title: Currency
    description: '<br/>Description: 0 = "Undefined", 1 = "EUR", 2 = "USD", 3 = "GBP"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
  DayOfWeek:
    title: DayOfWeek
    description: '<br/>Description: 0 = "Sunday", 1 = "Monday", 2 = "Tuesday", 3 = "Wednesday", 4 = "Thursday", 5 = "Friday", 6 = "Saturday"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    - '6'
  DayOpenHours:
    title: DayOpenHours
    type: object
    properties:
      day:
        type: object
        allOf:
        - $ref: '#/definitions/DayOfWeek'
        - description: '<br/>Description: 0 = "Sunday", 1 = "Monday", 2 = "Tuesday", 3 = "Wednesday", 4 = "Thursday", 5 = "Friday", 6 = "Saturday"'
      openingTimes:
        type: array
        items:
          $ref: '#/definitions/OpeningTime'
  DirectDebitProduct:
    title: DirectDebitProduct
    type: object
    properties:
      id:
        type: integer
        format: int32
      productName:
        type: string
      productCodeSEPA:
        type: string
      assignmentCodeFormat:
        type: string
  DirectDebitProductsResponse:
    title: DirectDebitProductsResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      product:
        type: object
        allOf:
        - $ref: '#/definitions/DirectDebitProduct'
        - {}
      productsList:
        type: array
        items:
          $ref: '#/definitions/DirectDebitProduct'
  DirectDebitResponse:
    title: DirectDebitResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      mandate:
        type: object
        allOf:
        - $ref: '#/definitions/Mandate'
        - {}
      mandatesList:
        type: array
        items:
          $ref: '#/definitions/Mandate'
      mandatesCollectionList:
        type: array
        items:
          $ref: '#/definitions/MandateCollection'
      maxDebitAmount:
        type: number
        format: double
      requires3FA:
        type: boolean
      userHasActive3FAPassword:
        type: boolean
  DirectOrder:
    title: DirectOrder
    type: object
    properties:
      name:
        type: string
      channelCreated:
        type: object
        allOf:
        - $ref: '#/definitions/TransactionChannel'
        - description: '<br/>Description: 0 = "All", 1 = "CSB", 2 = "Web", 3 = "ATM", 5 = "PSD2", 6 = "Mobile", 7 = "MassTransactions"'
      settlementOptions:
        type: object
        allOf:
        - $ref: '#/definitions/SettlementDateOptions'
        - description: '<br/>Description: 0 = "Today", 1 = "Future", 2 = "Repeat"'
      frequencyInterval:
        type: integer
        format: int32
      frequency:
        type: object
        allOf:
        - $ref: '#/definitions/Frequency'
        - description: '<br/>Description: 0 = "NotSet", 1 = "Daily", 2 = "Weekly", 3 = "Monthly"'
      executionDay:
        type: object
        allOf:
        - $ref: '#/definitions/ExecutionDay'
        - description: '<br/>Description: 0 = "SpecificDate", 1 = "MonthFirstDay", 2 = "MonthLastDay", 3 = "MonthFirstWorkingDay", 4 = "MonthLastWorkingDay"'
      blockAmount:
        type: boolean
      startDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
      maxExecutions:
        type: integer
        format: int32
  DirectOrderDetails:
    title: DirectOrderDetails
    type: object
    properties:
      name:
        type: string
      channelCreated:
        type: object
        allOf:
        - $ref: '#/definitions/TransactionChannel'
        - description: '<br/>Description: 0 = "All", 1 = "CSB", 2 = "Web", 3 = "ATM", 5 = "PSD2", 6 = "Mobile", 7 = "MassTransactions"'
      settlementOptions:
        type: object
        allOf:
        - $ref: '#/definitions/SettlementDateOptions'
        - description: '<br/>Description: 0 = "Today", 1 = "Future", 2 = "Repeat"'
      frequencyInterval:
        type: integer
        format: int32
      frequency:
        type: object
        allOf:
        - $ref: '#/definitions/Frequency'
        - description: '<br/>Description: 0 = "NotSet", 1 = "Daily", 2 = "Weekly", 3 = "Monthly"'
      executionDay:
        type: object
        allOf:
        - $ref: '#/definitions/ExecutionDay'
        - description: '<br/>Description: 0 = "SpecificDate", 1 = "MonthFirstDay", 2 = "MonthLastDay", 3 = "MonthFirstWorkingDay", 4 = "MonthLastWorkingDay"'
      blockAmount:
        type: boolean
      startDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
      maxExecutions:
        type: integer
        format: int32
      code:
        type: string
      status:
        type: object
        allOf:
        - $ref: '#/definitions/DirectOrderStatus'
        - description: '<br/>Description: 0 = "Active", 1 = "Inactive", 2 = "Invalid"'
      type:
        type: object
        allOf:
        - $ref: '#/definitions/DirectOrderType'
        - description: '<br/>Description: 0 = "Savings", 1 = "TimeDeposit", 2 = "Checking", 3 = "Current", 4 = "JointCredit", 5 = "Amortizing", 6 = "FullyAmortizing", 7 = "CreditTransfer", 8 = "ProductPayment", 9 = "CreditCardPayment", 10 = "Uknown"'
      transactionType:
        type: string
      dateCreated:
        type: string
        format: date-time
      timesExecuted:
        type: integer
        format: int32
      extraFieldsJson:
        type: string
  DirectOrderResponse:
    title: DirectOrderResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      directOrder:
        type: object
        allOf:
        - $ref: '#/definitions/DirectOrderDetails'
        - {}
      directOrders:
        type: array
        items:
          $ref: '#/definitions/DirectOrderDetails'
  DirectOrderStatus:
    title: DirectOrderStatus
    description: '<br/>Description: 0 = "Active", 1 = "Inactive", 2 = "Invalid"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
  DirectOrderType:
    title: DirectOrderType
    description: '<br/>Description: 0 = "Savings", 1 = "TimeDeposit", 2 = "Checking", 3 = "Current", 4 = "JointCredit", 5 = "Amortizing", 6 = "FullyAmortizing", 7 = "CreditTransfer", 8 = "ProductPayment", 9 = "CreditCardPayment", 10 = "Uknown"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    - '6'
    - '7'
    - '8'
    - '9'
    - '10'
  ExecutionDay:
    title: ExecutionDay
    description: '<br/>Description: 0 = "SpecificDate", 1 = "MonthFirstDay", 2 = "MonthLastDay", 3 = "MonthFirstWorkingDay", 4 = "MonthLastWorkingDay"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
  ExtraField:
    title: ExtraField
    type: object
    properties:
      fieldName:
        type: string
      label:
        type: string
      minLength:
        type: integer
        format: int32
      maxLength:
        type: integer
        format: int32
      order:
        type: integer
        format: int32
  ExtraProperties:
    title: ExtraProperties
    type: object
    properties:
      isIndividual:
        type: boolean
      isLegalEntity:
        type: boolean
      isFreeLancer:
        type: boolean
      isOnboardCompleted:
        type: boolean
      allowTransfersAbroad:
        type: boolean
  Frequency:
    title: Frequency
    description: '<br/>Description: 0 = "NotSet", 1 = "Daily", 2 = "Weekly", 3 = "Monthly"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
  FullyAmortizedInstallment:
    title: FullyAmortizedInstallment
    type: object
    properties:
      priority:
        type: integer
        format: int32
      expirationDate:
        type: string
        format: date-time
      hasUnpaidInterests:
        type: boolean
      hasInterestsToAccount:
        type: boolean
      interestAccounting:
        type: boolean
      interestsUnaccountedAmount:
        type: number
        format: double
      interestsAccountingAmount:
        type: number
        format: double
      installmentRemainingAmount:
        type: number
        format: double
  FullyAmortizedLoanDetails:
    title: FullyAmortizedLoanDetails
    type: object
    properties:
      beneficiaries:
        type: array
        items:
          type: string
      activity:
        type: string
      interest:
        type: string
      kad:
        type: string
      status:
        type: string
      mainBeneficiary:
        type: string
      form:
        type: string
      overdraftLimit:
        type: number
        format: double
      contract:
        type: string
      linkedAccounts:
        type: array
        items:
          $ref: '#/definitions/LinkedAccount'
      fullyAmortizedInstallments:
        type: array
        items:
          $ref: '#/definitions/FullyAmortizedInstallment'
  GetAcceptedPoliciesResponse:
    title: GetAcceptedPoliciesResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      acceptedPolicies:
        type: array
        items:
          $ref: '#/definitions/Policy'
  GetCardECommercePINResponse:
    title: GetCardECommercePINResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      raw_ePIN:
        type: string
  GetCardLimitsResponse:
    title: GetCardLimitsResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      cardLimits:
        type: array
        items:
          $ref: '#/definitions/CardLimit'
  GetCardOperationsResponse:
    title: GetCardOperationsResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      cardOperations:
        type: array
        items:
          $ref: '#/definitions/CardOperation'
  GetCardPINResponse:
    title: GetCardPINResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      rawPIN:
        type: string
  GovKycResponse:
    title: GovKycResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      govKycData:
        type: string
      govKycDataJson:
        type: string
      requestUrl:
        type: string
      tinNumber:
        type: string
  GuaranteeLetter:
    title: GuaranteeLetter
    type: object
    properties:
      egM_FILES_CONTENT:
        type: string
      egM_FILES_EGM_ID:
        type: integer
        format: int32
      egM_FILES_FILENAME:
        type: string
      egM_FILES_TEXT:
        type: string
      egM_FILES_TYPE:
        type: integer
        format: int32
  GuaranteeLettersResponse:
    title: GuaranteeLettersResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      guaranteeLetters:
        type: array
        items:
          $ref: '#/definitions/GuaranteeLetter'
      guaranteeLetterFile:
        type: string
  HttpStatusCode:
    title: HttpStatusCode
    description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
    type: integer
    format: int32
    enum:
    - '100'
    - '101'
    - '102'
    - '103'
    - '200'
    - '201'
    - '202'
    - '203'
    - '204'
    - '205'
    - '206'
    - '207'
    - '208'
    - '226'
    - '300'
    - '301'
    - '302'
    - '303'
    - '304'
    - '305'
    - '306'
    - '307'
    - '308'
    - '400'
    - '401'
    - '402'
    - '403'
    - '404'
    - '405'
    - '406'
    - '407'
    - '408'
    - '409'
    - '410'
    - '411'
    - '412'
    - '413'
    - '414'
    - '415'
    - '416'
    - '417'
    - '421'
    - '422'
    - '423'
    - '424'
    - '426'
    - '428'
    - '429'
    - '431'
    - '451'
    - '500'
    - '501'
    - '502'
    - '503'
    - '504'
    - '505'
    - '506'
    - '507'
    - '508'
    - '510'
    - '511'
  InterestRateScale:
    title: InterestRateScale
    type: object
    properties:
      fromAmount:
        type: number
        format: double
      basicInterestRate:
        type: number
        format: double
      scaleInterestRate:
        type: number
        format: double
      toAmount:
        type: number
        format: double
      totalInterestRate:
        type: number
        format: double
  IrisAlias:
    title: IrisAlias
    type: object
    properties:
      type:
        type: object
        allOf:
        - $ref: '#/definitions/IrisAliasType'
        - description: '<br/>Description: 0 = "MobilePhone", 1 = "TIN"'
      value:
        type: string
      typeString:
        readOnly: true
        type: string
  IrisAliasType:
    title: IrisAliasType
    description: '<br/>Description: 0 = "MobilePhone", 1 = "TIN"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
  IrisInstantPayments:
    title: IrisInstantPayments
    type: object
    properties:
      isActive:
        type: boolean
      alias:
        type: object
        allOf:
        - $ref: '#/definitions/IrisAlias'
        - {}
      accountIban:
        type: string
      isMainProvider:
        type: boolean
      commandToken:
        type: string
  IrisPaymentsResponse:
    title: IrisPaymentsResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      irisInstantPayments:
        type: object
        allOf:
        - $ref: '#/definitions/IrisInstantPayments'
        - {}
  JointAccountInstallment:
    title: JointAccountInstallment
    type: object
    properties:
      priority:
        type: integer
        format: int32
      expirationDate:
        type: string
        format: date-time
      installmentID:
        type: string
      transactionDate:
        type: string
        format: date-time
      accountedInstallment:
        type: integer
        format: int32
      installmentAmount:
        type: number
        format: double
  JointLoanDetails:
    title: JointLoanDetails
    type: object
    properties:
      beneficiaries:
        type: array
        items:
          type: string
      activity:
        type: string
      interest:
        type: string
      kad:
        type: string
      status:
        type: string
      mainBeneficiary:
        type: string
      form:
        type: string
      overdraftLimit:
        type: number
        format: double
      contract:
        type: string
      linkedAccounts:
        type: array
        items:
          $ref: '#/definitions/LinkedAccount'
      interestRateScales:
        type: array
        items:
          $ref: '#/definitions/InterestRateScale'
      jointAccountInstallments:
        type: array
        items:
          $ref: '#/definitions/JointAccountInstallment'
  LinkedAccount:
    title: LinkedAccount
    type: object
    properties:
      aA_Account:
        type: integer
        format: int32
      isActive:
        type: boolean
      isService:
        type: boolean
      accountNumber:
        type: string
  LoanDetailsResponse:
    title: LoanDetailsResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      accountType:
        type: object
        allOf:
        - $ref: '#/definitions/TypesOfAccount'
        - description: '<br/>Description: 1 = "Savings", 2 = "TimeDeposit", 3 = "Checking", 4 = "Current", 5 = "JointCredit", 6 = "Amortizing", 7 = "FullyAmortizing", 8 = "Unexpected"'
      jointLoanDetails:
        type: object
        allOf:
        - $ref: '#/definitions/JointLoanDetails'
        - {}
      amortizedLoanDetails:
        type: object
        allOf:
        - $ref: '#/definitions/AmortizedLoanDetails'
        - {}
      fullyAmortizedLoanDetails:
        type: object
        allOf:
        - $ref: '#/definitions/FullyAmortizedLoanDetails'
        - {}
  LoanTransaction:
    title: LoanTransaction
    type: object
    properties:
      transactionID:
        type: integer
        format: int32
      account:
        type: string
      aliasAccount:
        type: string
      transactionDate:
        type: string
        format: date-time
      transactionName:
        type: string
      currency:
        type: string
      amount:
        type: number
        format: double
      type:
        type: string
  LoanTransactionsResponse:
    title: LoanTransactionsResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      loanTransactions:
        type: array
        items:
          $ref: '#/definitions/LoanTransaction'
  LocationType:
    title: LocationType
    description: '<br/>Description: 0 = "ATM", 1 = "Branch", 2 = "Store"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
  Loggin:
    title: Loggin
    type: object
    properties:
      ip:
        type: string
      success:
        type: boolean
      date:
        type: string
        format: date-time
  LoginFirstStepResponse:
    title: LoginFirstStepResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      accessToken:
        type: string
      refreshToken:
        type: string
      validationCodeLength:
        type: integer
        format: int32
      validationCodeEntryId:
        type: integer
        format: int32
      validationCodeCreationTime:
        type: string
        format: date-time
      customerCode:
        type: string
  LoginSecondStepResponse:
    title: LoginSecondStepResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      loginKey:
        type: string
      sharedKey:
        type: string
      webUser:
        type: object
        allOf:
        - $ref: '#/definitions/WebUser'
        - {}
      sharedKeyEntryId:
        type: integer
        format: int32
      isFirstLogin:
        type: boolean
      validationCodeLength:
        type: integer
        format: int32
      validationCodeEntryId:
        type: integer
        format: int32
      validationCodeEntry:
        type: object
        allOf:
        - $ref: '#/definitions/ValidationCodeEntry'
        - {}
  Mandate:
    title: Mandate
    type: object
    properties:
      id:
        type: integer
        format: int32
      mandateCode:
        type: string
      creditorSchemeIdentificationID:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/MandateStatus'
        - description: '<br/>Description: 0 = "Unknown", 1 = "InProcess", 2 = "Accepted", 3 = "Rejected"'
      mandateType:
        type: object
        allOf:
        - $ref: '#/definitions/MandateType'
        - description: '<br/>Description: 0 = "Unknown", 1 = "CMF_New", 2 = "CMF_Update", 3 = "DMF"'
      productID:
        type: integer
        format: int32
      maxDebitAmount:
        type: number
        format: double
      debtorName:
        type: string
      creditorName:
        type: string
      ultimateDebtorName:
        type: string
      debtorAccountIBAN:
        type: string
      createNew:
        type: boolean
      commandToken:
        type: string
      verificationTimeSeconds:
        type: integer
        format: int32
      sequenceType:
        type: object
        allOf:
        - $ref: '#/definitions/SequenceType'
        - description: '<br/>Description: 0 = "Unknown", 1 = "Repeated", 2 = "Once", 3 = "Finalize"'
      mandateAction:
        type: object
        allOf:
        - $ref: '#/definitions/MandateAction'
        - description: '<br/>Description: 0 = "Unknown", 1 = "ToExport", 2 = "Sent", 3 = "Received", 4 = "Canceled"'
      requires3FA:
        type: boolean
      userHasActive3FAPassword:
        type: boolean
      userAgreedToProceedWithout3FA:
        type: boolean
  MandateAction:
    title: MandateAction
    description: '<br/>Description: 0 = "Unknown", 1 = "ToExport", 2 = "Sent", 3 = "Received", 4 = "Canceled"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
  MandateCollection:
    title: MandateCollection
    type: object
    properties:
      id:
        type: integer
        format: int32
      interbankSettlementAmount:
        type: number
        format: double
      interbankSettlementAmountCurrency:
        type: string
      creditorName:
        type: string
      debtorName:
        type: string
      ultimateDebtorName:
        type: string
      status:
        type: object
        allOf:
        - $ref: '#/definitions/MandateCollectionStatus'
        - description: '<br/>Description: 0 = "Unknown", 1 = "Rejected", 2 = "Approved"'
      collectionAction:
        type: integer
        format: int32
  MandateCollectionStatus:
    title: MandateCollectionStatus
    description: '<br/>Description: 0 = "Unknown", 1 = "Rejected", 2 = "Approved"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
  MandateStatus:
    title: MandateStatus
    description: '<br/>Description: 0 = "Unknown", 1 = "InProcess", 2 = "Accepted", 3 = "Rejected"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
  MandateType:
    title: MandateType
    description: '<br/>Description: 0 = "Unknown", 1 = "CMF_New", 2 = "CMF_Update", 3 = "DMF"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
  MapLocation:
    title: MapLocation
    type: object
    properties:
      streetAndNumber:
        type: string
      city:
        type: string
      countryCode:
        type: string
      postalCode:
        type: string
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
      hasCoordinates:
        readOnly: true
        type: boolean
      address:
        readOnly: true
        type: string
  MonthlyOverview:
    title: MonthlyOverview
    type: object
    properties:
      month:
        type: integer
        format: int32
      currentMonthBalance:
        type: object
        additionalProperties:
          $ref: '#/definitions/BalanceForCurrency'
      previousMonthBalance:
        type: object
        additionalProperties:
          $ref: '#/definitions/BalanceForCurrency'
      currentMonthIncome:
        type: number
        format: double
      currentMonthExpenses:
        type: number
        format: double
      numberOfCurrentMonthTransactions:
        type: integer
        format: int32
      previousMonthIncome:
        type: number
        format: double
      previousMonthExpenses:
        type: number
        format: double
      numberOfPreviousMonthTransactions:
        type: integer
        format: int32
  MonthlyOverviewResponse:
    title: MonthlyOverviewResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      monthlyOverview:
        type: object
        allOf:
        - $ref: '#/definitions/MonthlyOverview'
        - {}
  NormalAccountDetails:
    title: NormalAccountDetails
    type: object
    properties:
      isActive:
        type: boolean
      accountStatus:
        type: string
      activity:
        type: string
      mainBeneficiary:
        type: string
      beneficiaries:
        type: array
        items:
          type: string
      balances:
        type: object
        additionalProperties:
          type: number
          format: double
      accountCreationDate:
        type: string
        format: date-time
      overdraftLimit:
        type: number
        format: double
      interestRateScales:
        type: array
        items:
          $ref: '#/definitions/InterestRateScale'
      interestRateDepositionDate:
        type: string
        format: date-time
  NotificationModel:
    title: NotificationModel
    type: object
    properties:
      id:
        type: integer
        format: int32
      externalID:
        type: string
        maxLength: 70
      title:
        type: string
        maxLength: 140
      body:
        type: string
        minLength: 1
      dateCreated:
        type: string
        format: date-time
      dateUpdated:
        type: string
        format: date-time
      type:
        type: object
        allOf:
        - $ref: '#/definitions/NotificationType'
        - description: '<br/>Description: 1 = "Notification", 2 = "Transaction", 3 = "Verification", 4 = "Message", 5 = "Information", 6 = "LogoutUser", 7 = "StrongCustomerAuthentication", 8 = "StrongCustomerAuthenticationLogin", 9 = "EPaySuccess", 10 = "EPayRedirect", 11 = "EPayFailure", 12 = "FincludeAssesmentSuccess", 13 = "FincludeAssesmentFail", 14 = "ThreeDSecure"'
      isRead:
        type: boolean
      username:
        type: string
        maxLength: 256
      commandToken:
        type: string
        maxLength: 50
      expirationDate:
        type: string
        format: date-time
    required:
    - body
    - dateCreated
    - dateUpdated
    - type
    - isRead
  NotificationType:
    title: NotificationType
    description: '<br/>Description: 1 = "Notification", 2 = "Transaction", 3 = "Verification", 4 = "Message", 5 = "Information", 6 = "LogoutUser", 7 = "StrongCustomerAuthentication", 8 = "StrongCustomerAuthenticationLogin", 9 = "EPaySuccess", 10 = "EPayRedirect", 11 = "EPayFailure", 12 = "FincludeAssesmentSuccess", 13 = "FincludeAssesmentFail", 14 = "ThreeDSecure"'
    type: integer
    format: int32
    enum:
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    - '6'
    - '7'
    - '8'
    - '9'
    - '10'
    - '11'
    - '12'
    - '13'
    - '14'
  NotificationsResponse:
    title: NotificationsResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      notification:
        type: object
        allOf:
        - $ref: '#/definitions/NotificationModel'
        - {}
      notificationList:
        type: array
        items:
          $ref: '#/definitions/NotificationModel'
  OpeningTime:
    title: OpeningTime
    type: object
    properties:
      opensAt:
        type: object
        allOf:
        - $ref: '#/definitions/TimeSpan'
        - {}
      closesAt:
        type: object
        allOf:
        - $ref: '#/definitions/TimeSpan'
        - {}
  PasswordRulesResponse:
    title: PasswordRulesResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      passwordLength:
        type: integer
        format: int32
      allowedSpecialCharacters:
        type: string
      allowedCharacters:
        type: string
      minSpecialChars:
        type: integer
        format: int32
      onlyLatinCharactersAndNumbers:
        type: boolean
      onlyCapitalLetters:
        type: boolean
      allowedLoweredCharacters:
        type: string
  Payment:
    title: Payment
    type: object
    properties:
      debtorAccountNumberOrIban:
        type: string
      debtorName:
        type: string
      creditorName:
        type: string
      amount:
        type: number
        format: double
      productCode:
        type: string
      paymentCode:
        type: string
      charges:
        type: number
        format: double
      notes:
        type: string
      extraFields:
        type: object
        additionalProperties:
          type: string
      settlementDate:
        type: string
        format: date-time
      commandToken:
        type: string
      verificationTimeSeconds:
        type: integer
        format: int32
      paymentType:
        type: object
        allOf:
        - $ref: '#/definitions/PaymentType'
        - description: '<br/>Description: 0 = "Bill", 1 = "CreditCard"'
      isNotValidCreditCard:
        type: boolean
      directOrder:
        type: object
        allOf:
        - $ref: '#/definitions/DirectOrder'
        - {}
      remittanceInformationType:
        type: string
      onlinePayment:
        type: boolean
      requires3FA:
        type: boolean
      userHasActive3FAPassword:
        type: boolean
      userAgreedToProceedWithout3FA:
        type: boolean
  PaymentCategory:
    title: PaymentCategory
    type: object
    properties:
      name:
        type: string
      englishName:
        type: string
      priority:
        type: integer
        format: int32
  PaymentCode:
    title: PaymentCode
    type: object
    properties:
      minLength:
        type: integer
        format: int32
      maxLength:
        type: integer
        format: int32
      order:
        type: integer
        format: int32
  PaymentProduct:
    title: PaymentProduct
    type: object
    properties:
      productCode:
        type: string
      name:
        type: string
      displayName:
        type: string
      englishDisplayName:
        type: string
      categoryName:
        type: string
      iconBase64:
        type: string
      paymentCode:
        type: object
        allOf:
        - $ref: '#/definitions/PaymentCode'
        - {}
      totalCharges:
        type: number
        format: double
      billImageBase64:
        type: string
      extraFields:
        type: array
        items:
          $ref: '#/definitions/ExtraField'
      remittanceInformationMinLength:
        type: integer
        format: int32
      remittanceInformationMaxLength:
        type: integer
        format: int32
      remittanceInformationType:
        type: string
      hasOnline:
        type: boolean
  PaymentProductsResponse:
    title: PaymentProductsResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      product:
        type: object
        allOf:
        - $ref: '#/definitions/PaymentProduct'
        - {}
      productsList:
        type: array
        items:
          $ref: '#/definitions/PaymentProduct'
      paymentCategories:
        type: array
        items:
          $ref: '#/definitions/PaymentCategory'
      recentProductsList:
        type: array
        items:
          $ref: '#/definitions/PaymentProduct'
      frequentProductsList:
        type: array
        items:
          $ref: '#/definitions/PaymentProduct'
  PaymentResponse:
    title: PaymentResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      payment:
        type: object
        allOf:
        - $ref: '#/definitions/Payment'
        - {}
      requires3FA:
        type: boolean
      userHasActive3FAPassword:
        type: boolean
  PaymentType:
    title: PaymentType
    description: '<br/>Description: 0 = "Bill", 1 = "CreditCard"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
  PlaceOnMap:
    title: PlaceOnMap
    type: object
    properties:
      type:
        type: object
        allOf:
        - $ref: '#/definitions/LocationType'
        - description: '<br/>Description: 0 = "ATM", 1 = "Branch", 2 = "Store"'
      name:
        type: string
      logoBase64:
        type: string
      phone:
        type: string
      location:
        type: object
        allOf:
        - $ref: '#/definitions/MapLocation'
        - {}
      distanceMeters:
        type: integer
        format: int64
      openingHoursPerDay:
        type: array
        items:
          $ref: '#/definitions/DayOpenHours'
  Policy:
    title: Policy
    type: object
    properties:
      id:
        type: integer
        format: int32
      title:
        type: string
      text:
        type: string
      order:
        type: integer
        format: int32
      code:
        type: string
      language:
        type: string
      hasAccepted:
        type: boolean
  PolicyAcknowledgement:
    title: PolicyAcknowledgement
    type: object
    properties:
      policyTextCode:
        type: string
      hasAcknowledged:
        type: boolean
      dateAccepted:
        type: string
        format: date-time
      channel:
        type: string
  PrivateCheque:
    title: PrivateCheque
    type: object
    properties:
      id:
        type: integer
        format: int32
      number:
        type: string
      title:
        type: string
      amount:
        type: number
        format: double
      type:
        type: object
        allOf:
        - $ref: '#/definitions/ChequeType'
        - description: '<br/>Description: 0 = "Private", 1 = "Bank"'
      publicationDate:
        type: string
        format: date-time
      paidDate:
        type: string
        format: date-time
      account:
        type: string
      paymentDate:
        type: string
        format: date-time
      appearanceDate:
        type: string
        format: date-time
  ProblemDetails:
    title: ProblemDetails
    type: object
    properties:
      type:
        type: string
      title:
        type: string
      status:
        type: integer
        format: int32
      detail:
        type: string
      instance:
        type: string
  ProductCategory:
    title: ProductCategory
    description: '<br/>Description: 1 = "Plain", 2 = "Payroll"'
    type: integer
    format: int32
    enum:
    - '1'
    - '2'
  Requirement3FaAndUserAcknowledgementResponse:
    title: Requirement3FaAndUserAcknowledgementResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      require3FA:
        type: boolean
      userHas3FA:
        type: boolean
      userHasAgreedProceedingWithout3FA:
        type: boolean
  ResetPasswordResponse:
    title: ResetPasswordResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
  Response:
    title: Response
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
  SCAResponse:
    title: SCAResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      commandToken:
        type: string
      pendingTransactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'
      date:
        type: string
        format: date-time
      verificationTimeSeconds:
        type: integer
        format: int32
  SequenceType:
    title: SequenceType
    description: '<br/>Description: 0 = "Unknown", 1 = "Repeated", 2 = "Once", 3 = "Finalize"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
  SetCardOperationsResponse:
    title: SetCardOperationsResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
  SettlementDateOptions:
    title: SettlementDateOptions
    description: '<br/>Description: 0 = "Today", 1 = "Future", 2 = "Repeat"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
  Slip:
    title: Slip
    type: object
    properties:
      id:
        type: string
      customerUsername:
        type: string
      customerAccountNumber:
        type: string
      slipType:
        type: object
        allOf:
        - $ref: '#/definitions/SlipType'
        - description: '<br/>Description: 0 = "Unknown", 1 = "Payment", 2 = "Payout", 3 = "Refund"'
      barcodeEan13:
        type: string
      checkoutToken:
        type: string
      dateCreated:
        type: string
        format: date-time
      dateUpdated:
        type: string
        format: date-time
      dateExpires:
        type: string
        format: date-time
      nearestStores:
        type: array
        items:
          $ref: '#/definitions/PlaceOnMap'
      refundForSlipId:
        type: string
      transaction:
        type: object
        allOf:
        - $ref: '#/definitions/ViaCashTransaction'
        - {}
  SlipType:
    title: SlipType
    description: '<br/>Description: 0 = "Unknown", 1 = "Payment", 2 = "Payout", 3 = "Refund"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
  StatusType:
    title: StatusType
    description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    - '6'
    - '7'
    - '8'
    - '9'
    - '10'
    - '11'
    - '12'
    - '13'
    - '14'
  Template:
    title: Template
    type: object
    properties:
      name:
        type: string
      templateJson:
        type: object
        allOf:
        - $ref: '#/definitions/TemplateModel'
        - {}
      roleName:
        type: string
      id:
        type: integer
        format: int32
  TemplateModel:
    title: TemplateModel
    type: object
    properties:
      accountFrom:
        type: string
      accountTo:
        type: string
      amount:
        type: number
        format: double
      reason:
        type: string
      debtorAccount:
        type: string
      creditorAccount:
        type: string
      creditorName:
        type: string
      bic:
        type: string
      country:
        type: string
      paymentCode:
        type: string
      sendAlias:
        type: string
      information:
        type: string
  TemplatesResponse:
    title: TemplatesResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      templates:
        type: array
        items:
          $ref: '#/definitions/Template'
  TimeDepositAccountDetails:
    title: TimeDepositAccountDetails
    type: object
    properties:
      isActive:
        type: boolean
      accountStatus:
        type: string
      activity:
        type: string
      mainBeneficiary:
        type: string
      beneficiaries:
        type: array
        items:
          type: string
      balances:
        type: object
        additionalProperties:
          type: number
          format: double
      accountCreationDate:
        type: string
        format: date-time
      linkedAccountCurrency:
        type: string
      linkedAccount:
        type: string
      timeDepositInterestRates:
        type: array
        items:
          $ref: '#/definitions/TimeDepositInterestRate'
  TimeDepositInterestRate:
    title: TimeDepositInterestRate
    type: object
    properties:
      startDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
      interestRate:
        type: number
        format: double
      increment:
        type: number
        format: double
      totalInterestRate:
        type: number
        format: double
  TimeSpan:
    title: TimeSpan
    type: object
    properties:
      ticks:
        type: integer
        format: int64
      days:
        readOnly: true
        type: integer
        format: int32
      hours:
        readOnly: true
        type: integer
        format: int32
      milliseconds:
        readOnly: true
        type: integer
        format: int32
      minutes:
        readOnly: true
        type: integer
        format: int32
      seconds:
        readOnly: true
        type: integer
        format: int32
      totalDays:
        readOnly: true
        type: number
        format: double
      totalHours:
        readOnly: true
        type: number
        format: double
      totalMilliseconds:
        readOnly: true
        type: number
        format: double
      totalMinutes:
        readOnly: true
        type: number
        format: double
      totalSeconds:
        readOnly: true
        type: number
        format: double
  Transaction:
    title: Transaction
    type: object
    properties:
      transactionCode:
        type: string
      description:
        type: string
      additionalInfo:
        type: string
      amount:
        type: number
        format: double
      date:
        type: string
        format: date-time
      referenceDate:
        type: string
        format: date-time
      currency:
        type: object
        allOf:
        - $ref: '#/definitions/Currency'
        - description: '<br/>Description: 0 = "Undefined", 1 = "EUR", 2 = "USD", 3 = "GBP"'
      creditorAccountNumber:
        type: string
      creditorAccountIban:
        type: string
      creditorName:
        type: string
      debtorAccountNumber:
        type: string
      debtorAccountIban:
        type: string
      debtorName:
        type: string
      charges:
        type: number
        format: double
      transactionType:
        type: object
        allOf:
        - $ref: '#/definitions/CommandType'
        - description: '<br/>Description: 0 = "Unknown", 1 = "TransferToMyAccount", 2 = "TransferToThirdParty", 3 = "TransferToOtherBank", 4 = "BillPayment", 5 = "CreditCardPayment", 6 = "DirectDebit", 7 = "IrisTransfer", 8 = "Card_GetPin", 9 = "Card_ChangePin", 10 = "Card_UnblockPin", 11 = "Card_GetECommercePin", 12 = "Card_ChangeECommercePin", 13 = "Card_ChangeAllowedOperations", 14 = "Card_ChangeLimits", 15 = "Card_ChangeStatus", 16 = "Card_GetSensitiveInformation", 17 = "Card_SetCVV", 18 = "Card_ReIssue", 19 = "Card_ChangeAlias"'
      requires3FA:
        type: boolean
      userHasActive3FAPassword:
        type: boolean
  TransactionCategoryType:
    title: TransactionCategoryType
    description: '<br/>Description: 0 = "General", 1 = "Medical", 2 = "Pharmaceutical", 3 = "Vehicles", 4 = "Unknown"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
  TransactionChannel:
    title: TransactionChannel
    description: '<br/>Description: 0 = "All", 1 = "CSB", 2 = "Web", 3 = "ATM", 5 = "PSD2", 6 = "Mobile", 7 = "MassTransactions"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
    - '5'
    - '6'
    - '7'
  TransactionDetails:
    title: TransactionDetails
    type: object
    properties:
      transactionType:
        type: string
      transactionTypeEnum:
        type: object
        allOf:
        - $ref: '#/definitions/TransactionTypeEnum'
        - description: '<br/>Description: 0 = "ProductPayment", 1 = "CreditCardPayment", 2 = "CreditTransfer", 3 = "SavingsTransfer", 4 = "Cheque", 5 = "BillExchange", 6 = "Loan", 7 = "Unknown"'
      transactionCode:
        type: string
      debtorName:
        type: string
      debtorIBAN:
        type: string
      transactorName:
        type: string
      commission:
        type: number
        format: double
      extraCommission:
        type: number
        format: double
      fees:
        type: number
        format: double
      extraFees:
        type: number
        format: double
      transactionAmount:
        type: number
        format: double
      transactionAccount:
        type: string
      transactionDate:
        type: string
      transactionNote:
        type: string
      transactionChannel:
        type: string
      transactionCategory:
        type: string
      vouchers:
        type: array
        items:
          $ref: '#/definitions/Voucher'
      creditorName:
        type: string
      creditorIBAN:
        type: string
      creditorBank:
        type: string
      creditTransferInfo:
        type: string
      paymentProduct:
        type: string
      paymentCode:
        type: string
      bicBank:
        type: string
      creditorMainBeneficiary:
        type: string
  TransactionState:
    title: TransactionState
    description: '<br/>Description: 0 = "Expired", 1 = "Invalidated", 2 = "Paid", 3 = "Pending"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
  TransactionTypeEnum:
    title: TransactionTypeEnum
    description: '<br/>Description: 0 = "ProductPayment", 1 = "CreditCardPayment", 2 = "CreditTransfer", 3 = "SavingsTransfer", 4 = "Cheque", 5 = "BillExchange", 6 = "Loan", 7 = "Unknown"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    - '6'
    - '7'
  TransactionsResponse:
    title: TransactionsResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'
      transactionDetails:
        type: object
        allOf:
        - $ref: '#/definitions/TransactionDetails'
        - {}
  Transfer:
    title: Transfer
    type: object
    properties:
      commandToken:
        type: string
      transferType:
        type: object
        allOf:
        - $ref: '#/definitions/TransferType'
        - description: '<br/>Description: 0 = "Unknown", 1 = "ToMyAccount", 2 = "ToBank", 3 = "ToOtherBank", 4 = "ToForeignBank", 5 = "Iris"'
      debtorAccountNumberOrIban:
        type: string
      creditorAccountNumberOrIban:
        type: string
      creditorName:
        type: string
      creditorAccountBeneficiaries:
        type: array
        items:
          type: string
      bic:
        type: string
      amount:
        type: number
        format: double
      currencyID:
        type: integer
        format: int32
      currency:
        type: object
        allOf:
        - $ref: '#/definitions/Currency'
        - description: '<br/>Description: 0 = "Undefined", 1 = "EUR", 2 = "USD", 3 = "GBP"'
      transferCharges:
        type: object
        allOf:
        - $ref: '#/definitions/TransferCharges'
        - {}
      chargeBearer:
        type: object
        allOf:
        - $ref: '#/definitions/ChargeBearer'
        - description: '<br/>Description: 0 = "Shared", 1 = "Debtor"'
      isFoc:
        readOnly: true
        type: boolean
      reason:
        type: string
        maxLength: 100
      settlementDate:
        type: string
        format: date-time
      directOrder:
        type: object
        allOf:
        - $ref: '#/definitions/DirectOrder'
        - {}
      voucherNumber:
        type: string
      bookBalance:
        type: number
        format: double
      verificationTimeSeconds:
        type: integer
        format: int32
      creditorBank:
        type: string
      hasDefaultReason:
        type: boolean
      onlinePayment:
        type: boolean
      requires3FA:
        type: boolean
      userHasActive3FAPassword:
        type: boolean
      userAgreedToProceedWithout3FA:
        type: boolean
  TransferCharges:
    title: TransferCharges
    type: object
    properties:
      charges:
        type: number
        format: double
      commission:
        type: number
        format: double
      expenses:
        type: number
        format: double
      totalCharges:
        type: number
        format: double
      showChargesPreference:
        type: boolean
      mustShowCharges:
        readOnly: true
        type: boolean
      hasFX:
        type: boolean
      fxRate:
        type: number
        format: double
      foreignCurrencyReceiveAmount:
        type: number
        format: double
      clearingSystem:
        type: string
      isFoc:
        type: boolean
  TransferChargesResponse:
    title: TransferChargesResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      charges:
        type: object
        allOf:
        - $ref: '#/definitions/TransferCharges'
        - {}
  TransferExecuteResponse:
    title: TransferExecuteResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      voucherNumber:
        type: string
      bookBalance:
        type: number
        format: double
  TransferResponse:
    title: TransferResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      transfer:
        type: object
        allOf:
        - $ref: '#/definitions/Transfer'
        - {}
  TransferType:
    title: TransferType
    description: '<br/>Description: 0 = "Unknown", 1 = "ToMyAccount", 2 = "ToBank", 3 = "ToOtherBank", 4 = "ToForeignBank", 5 = "Iris"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
  TypesOfAccount:
    title: TypesOfAccount
    description: '<br/>Description: 1 = "Savings", 2 = "TimeDeposit", 3 = "Checking", 4 = "Current", 5 = "JointCredit", 6 = "Amortizing", 7 = "FullyAmortizing", 8 = "Unexpected"'
    type: integer
    format: int32
    enum:
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    - '6'
    - '7'
    - '8'
  UserCardsResponse:
    title: UserCardsResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      userCardsList:
        type: array
        items:
          $ref: '#/definitions/Card'
  UserLoggins:
    title: UserLoggins
    type: object
    properties:
      id:
        type: integer
        format: int32
      username:
        type: string
        minLength: 1
        maxLength: 256
      deviceID:
        type: string
        minLength: 1
        maxLength: 70
      enabled:
        type: boolean
      loginKey:
        type: string
        maxLength: 70
      dateCreated:
        type: string
        format: date-time
      dateUpdated:
        type: string
        format: date-time
      lastAction:
        type: string
        format: date-time
      blocked:
        type: boolean
      deviceName:
        type: string
        maxLength: 50
      deviceDetails:
        type: string
        maxLength: 100
      currentVersion:
        type: string
        maxLength: 20
    required:
    - username
    - deviceID
    - enabled
    - dateCreated
    - dateUpdated
    - lastAction
    - blocked
  UserResponse:
    title: UserResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      webUser:
        type: object
        allOf:
        - $ref: '#/definitions/WebUser'
        - {}
      customerCode:
        type: string
      devicesList:
        type: array
        items:
          $ref: '#/definitions/UserLoggins'
      logginsList:
        type: array
        items:
          $ref: '#/definitions/Loggin'
      newAccessToken:
        type: string
      newRefreshToken:
        type: string
      commandToken:
        type: string
      pendingTransactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'
      date:
        type: string
        format: date-time
      verificationTimeSeconds:
        type: integer
        format: int32
  UserRole:
    title: UserRole
    description: '<br/>Description: 0 = "GetLoanAccounts", 1 = "TransferToTimeDepositLinkedAccount", 2 = "GetLoanAccountDetails", 3 = "Approve", 4 = "JointCreditAccount", 5 = "CheckBalance", 6 = "ApplicationUserAccountOption", 7 = "GetLoggins", 8 = "LoanAccountPayment", 9 = "GetCustomeContracts", 10 = "DynamicViews", 11 = "PayCreditCard", 12 = "MassFile", 13 = "CreateDepositAccount", 14 = "IrisInstantPayments", 15 = "MakePayment", 16 = "GetAccounts", 17 = "AccountOptions", 18 = "Templates", 19 = "ViewDirectOrders", 20 = "GetLettersOfGuarantee", 21 = "SendTransactionsViaEmail", 22 = "MassTransferCreditTransfer", 23 = "RequestApproval", 24 = "GeneralRead", 25 = "AtmBranch", 26 = "ManageCreditTransfers", 27 = "CoorporateUser", 28 = "Generic", 29 = "GetAccountsDetails", 30 = "CustomerCards", 31 = "CreateEditDirectOrder", 32 = "CreditTransfer", 33 = "TransferToOthersAccount", 34 = "GetAccountsTransactions", 35 = "GetBankMessages", 36 = "TransferToMyAccount", 37 = "SendVoucherViaEmail", 38 = "MassPayments", 39 = "CustomerDataFiles", 40 = "IrisInstantPaymentsTransfer", 41 = "Cheques", 42 = "DirectDebit", 43 = "MassTransferToBank", 44 = "GetLoanAccountsTransactions", 45 = "GetUserInfo", 46 = "GetAllAccounts"'
    type: integer
    format: int32
    enum:
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    - '6'
    - '7'
    - '8'
    - '9'
    - '10'
    - '11'
    - '12'
    - '13'
    - '14'
    - '15'
    - '16'
    - '17'
    - '18'
    - '19'
    - '20'
    - '21'
    - '22'
    - '23'
    - '24'
    - '25'
    - '26'
    - '27'
    - '28'
    - '29'
    - '30'
    - '31'
    - '32'
    - '33'
    - '34'
    - '35'
    - '36'
    - '37'
    - '38'
    - '39'
    - '40'
    - '41'
    - '42'
    - '43'
    - '44'
    - '45'
    - '46'
  UserSettings:
    title: UserSettings
    type: object
    properties:
      policies:
        type: array
        items:
          $ref: '#/definitions/PolicyAcknowledgement'
      consents:
        type: array
        items:
          $ref: '#/definitions/ConsentAcknowledgement'
      properties:
        type: object
        allOf:
        - $ref: '#/definitions/ExtraProperties'
        - {}
  ValidateAccountResponse:
    title: ValidateAccountResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
  ValidateIbanResponse:
    title: ValidateIbanResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
  ValidatePasswordResponse:
    title: ValidatePasswordResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      isValid:
        type: boolean
  ValidationCodeEntry:
    title: ValidationCodeEntry
    type: object
    properties:
      id:
        type: integer
        format: int32
      date:
        type: string
        format: date-time
      username:
        type: string
        minLength: 1
        maxLength: 256
      appKey:
        type: string
        minLength: 1
        maxLength: 70
      deviceID:
        type: string
        minLength: 1
        maxLength: 70
      code:
        type: string
        minLength: 1
        maxLength: 10
    required:
    - date
    - username
    - appKey
    - deviceID
    - code
  ViaCashResponse:
    title: ViaCashResponse
    type: object
    properties:
      requiredVersion:
        type: integer
        format: int32
      status:
        type: object
        allOf:
        - $ref: '#/definitions/StatusType'
        - description: '<br/>Description: 0 = "UNKNOWN", 1 = "OK", 2 = "FAIL", 3 = "UNAUTHORIZED", 4 = "PASSWORD_EXPIRED", 5 = "DISABLED", 6 = "BLOCKED", 7 = "TIME_OUT", 8 = "NO_INTERNET", 9 = "INVALID_ACCOUNT", 10 = "REQUIRE_UPDATE", 11 = "SYSTEM_DOWN", 12 = "PENDING_COMMAND", 13 = "PENDING_LOGIN", 14 = "REGISTERED"'
      httpStatusCode:
        type: object
        allOf:
        - $ref: '#/definitions/HttpStatusCode'
        - description: '<br/>Description: 100 = "Continue", 101 = "SwitchingProtocols", 102 = "Processing", 103 = "EarlyHints", 200 = "OK", 201 = "Created", 202 = "Accepted", 203 = "NonAuthoritativeInformation", 204 = "NoContent", 205 = "ResetContent", 206 = "PartialContent", 207 = "MultiStatus", 208 = "AlreadyReported", 226 = "IMUsed", 300 = "Ambiguous", 300 = "Ambiguous", 301 = "Moved", 301 = "Moved", 302 = "Redirect", 302 = "Redirect", 303 = "RedirectMethod", 303 = "RedirectMethod", 304 = "NotModified", 305 = "UseProxy", 306 = "Unused", 307 = "TemporaryRedirect", 307 = "TemporaryRedirect", 308 = "PermanentRedirect", 400 = "BadRequest", 401 = "Unauthorized", 402 = "PaymentRequired", 403 = "Forbidden", 404 = "NotFound", 405 = "MethodNotAllowed", 406 = "NotAcceptable", 407 = "ProxyAuthenticationRequired", 408 = "RequestTimeout", 409 = "Conflict", 410 = "Gone", 411 = "LengthRequired", 412 = "PreconditionFailed", 413 = "RequestEntityTooLarge", 414 = "RequestUriTooLong", 415 = "UnsupportedMediaType", 416 = "RequestedRangeNotSatisfiable", 417 = "ExpectationFailed", 421 = "MisdirectedRequest", 422 = "UnprocessableEntity", 423 = "Locked", 424 = "FailedDependency", 426 = "UpgradeRequired", 428 = "PreconditionRequired", 429 = "TooManyRequests", 431 = "RequestHeaderFieldsTooLarge", 451 = "UnavailableForLegalReasons", 500 = "InternalServerError", 501 = "NotImplemented", 502 = "BadGateway", 503 = "ServiceUnavailable", 504 = "GatewayTimeout", 505 = "HttpVersionNotSupported", 506 = "VariantAlsoNegotiates", 507 = "InsufficientStorage", 508 = "LoopDetected", 510 = "NotExtended", 511 = "NetworkAuthenticationRequired"'
      message:
        type: string
      slip:
        type: object
        allOf:
        - $ref: '#/definitions/Slip'
        - {}
      slips:
        type: array
        items:
          $ref: '#/definitions/Slip'
  ViaCashTransaction:
    title: ViaCashTransaction
    type: object
    properties:
      id:
        type: string
      amount:
        type: number
        format: double
      state:
        type: object
        allOf:
        - $ref: '#/definitions/TransactionState'
        - description: '<br/>Description: 0 = "Expired", 1 = "Invalidated", 2 = "Paid", 3 = "Pending"'
  Voucher:
    title: Voucher
    type: object
    properties:
      voucherName:
        type: string
      voucherBase64Pdf:
        type: string
  WebUser:
    title: WebUser
    type: object
    properties:
      id:
        type: string
      username:
        type: string
      fullname:
        type: string
      photo:
        type: string
      customerCode:
        type: string
      accessToken:
        type: string
      refreshToken:
        type: string
      pendingPolicies:
        type: array
        items:
          $ref: '#/definitions/Policy'
      hasPendingPolicies:
        type: boolean
      roles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
      homeViewsJson:
        type: string
      favoriteOperationsJson:
        type: string
      userPreferencesJson:
        type: string
      phone:
        type: string
      email:
        type: string
      behavAuth:
        type: object
        allOf:
        - $ref: '#/definitions/BehavAuthSettings'
        - {}
      userSettings:
        type: object
        allOf:
        - $ref: '#/definitions/UserSettings'
        - {}
tags:
- name: Accounts
  description: ''
- name: Cards
  description: ''
- name: DirectDebit
  description: ''
- name: Payments
  description: ''
- name: Transfers
  description: ''
- name: Users
  description: ''
